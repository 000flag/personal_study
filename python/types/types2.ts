/* AUTO-GENERATED by OpenAPI -> TS generator (Python)
 * - Merged multiple specs
 * - No 'any' (uses 'unknown' fallback)
 * - Supports JSON, multipart/form-data, x-www-form-urlencoded
 * - Deduplicated reusable types by structural fingerprint
 */

export interface ProfileDto {
  id?: number;
  accountId: number;
  locationId?: number;
  desiredJobCategoryId?: number;
  experienceLevel?: number;
  educationLevel?: number;
  skills?: string;
  desiredLocationId?: number;
  desiredSalaryCode?: number;
  profileImageKey?: string;
  updatedAt?: string;
}

export interface ResultDataProfileDto {
  count?: number;
  msg?: string;
  data?: ProfileDto;
}

export interface ResultDataObjectData {
}

export interface ResultDataObject {
  count?: number;
  msg?: string;
  data?: ResultDataObjectData;
}

export interface ResetPasswordRequestDTO {
  verificationToken?: string;
  code?: string;
  newPassword?: string;
}

export interface ResetPasswordResponseDTO {
  reset?: boolean;
}

export interface ResultDataResetPasswordResponseDTO {
  count?: number;
  msg?: string;
  data?: ResetPasswordResponseDTO;
}

export interface CompanyProfileDTO {
  companyId?: number;
  companyName?: string;
  industry?: string;
  address?: string;
  foundedDate?: string;
  website?: string;
  logoKey?: string;
  numEmployees?: number;
  revenue?: number;
  representativeName?: string;
  businessNumber?: string;
  status?: number;
  updatedAt?: string;
}

export interface ResultDataLong {
  count?: number;
  msg?: string;
  data?: number;
}

export interface UpdateApplicationStatusRequest {
  status?: number;
}

export interface ResultDataInteger {
  count?: number;
  msg?: string;
  data?: number;
}

export interface UpdateTagRequestDTO {
  id?: number;
  name?: string;
  status?: number;
}

export interface AdminAccountDTO {
  id?: number;
  name?: string;
  email?: string;
  password?: string;
  role?: number;
  createdAt?: string;
}

export interface ResultDataString {
  count?: number;
  msg?: string;
  data?: string;
}

export interface ResumeUrlDTO {
  profileId?: number;
  title?: string;
  resumeUrl?: string;
}

export interface ProfileUpdateDTO {
  locationId?: number;
  desiredJobCategoryId?: number;
  skills?: string;
}

export interface ResumeContentSaveDTO {
  sectionType?: number;
  sectionTitle?: string;
  contentOrder?: number;
  organization?: string;
  title?: string;
  field?: string;
  description?: string;
  dateFrom?: string;
  dateTo?: string;
  contentFileKey?: string;
  contentFileName?: string;
  contentFileType?: string;
}

export interface ResumeInfo {
  title?: string;
  resumeType?: number;
  resumeFileKey?: string;
  resumeFileName?: string;
  resumeFileType?: string;
  resumeUrl?: string;
  overview?: string;
  coverLetterId?: number;
  extraLink1?: string;
  extraLink2?: string;
  isPrimary?: boolean;
  status?: number;
}

export interface ResumeSaveRequestDTO {
  resume?: ResumeInfo;
  profile?: ProfileUpdateDTO;
  resumeContents?: ResumeContentSaveDTO[];
}

export interface ApplyRequestDTO {
  jobPostingId?: number;
  resumeId?: number;
}

export interface ProfileInfoDTO {
  accountId?: number;
  name?: string;
  email?: string;
  phone?: string;
  experienceLevel?: number;
  educationLevel?: number;
  skills?: string;
  desiredSalaryCode?: number;
  profileImageUrl?: string;
}

export type ResultDataVoid = ResultDataObject;

export interface MyOfferDTO {
  offerList?: OfferDetail[];
}

export interface OfferDetail {
  status?: number;
  id?: number;
  companyName?: string;
  offerDate?: string;
  message?: string;
  location?: string;
  businessId?: string;
  industry?: string;
}

export interface ResultDataMyOfferDTO {
  count?: number;
  msg?: string;
  data?: MyOfferDTO;
}

export interface InterviewReviewCreateDTO {
  companyId?: number;
  jobCategoryId?: number;
  careerLevel?: number;
  interviewYearMonth?: string;
  rating?: number;
  difficulty?: number;
  interviewType?: number;
  interviewParticipants?: number;
  hasFrequentQuestions?: boolean;
  questionsAsked?: string;
  interviewTip?: string;
  result?: number;
  applicationId?: number;
}

export interface CoachingRequestDTO {
  contentId?: number;
  sectionTitle?: string;
  content?: string;
}

export interface CoachingResponseDTO {
  contentId?: number;
  feedbackId?: number;
  feedback?: string;
  revisedContent?: string;
  originalContent?: string;
  isApplied?: boolean;
  appliedAt?: string;
  createdAt?: string;
}

export interface ResultDataCoachingResponseDTO {
  count?: number;
  msg?: string;
  data?: CoachingResponseDTO;
}

export interface FitAnalysisRequestDTO {
  contentId?: number;
  jobCategoryId?: number;
  content?: string;
  jobTitle?: string;
  jobPostingText?: string;
}

export interface FitAnalysisResponseDTO {
  fitScore?: number;
  comment?: string;
}

export interface ResultDataFitAnalysisResponseDTO {
  count?: number;
  msg?: string;
  data?: FitAnalysisResponseDTO;
}

export interface CoverLetterContentDTO {
  id?: number;
  sectionTitle?: string;
  content?: string;
  contentOrder?: number;
}

export interface CoverLetterPersonalDTO {
  id?: number;
  profileId?: number;
  title?: string;
  updatedAt?: string;
  contentCount?: number;
  contents?: CoverLetterContentDTO[];
}

export interface SimpleCoachingRequestDTO {
  sectionTitle?: string;
  content?: string;
}

export interface ResultDataSimpleCoachingResponseDTO {
  count?: number;
  msg?: string;
  data?: SimpleCoachingResponseDTO;
}

export interface SimpleCoachingResponseDTO {
  feedback?: string;
  revisedContent?: string;
}

export interface CompanyUnblockRequestDTO {
  companyId?: number;
}

export interface CompanySearchRequestDTO {
  keyword?: string;
}

export interface CompanySearchResponseDTO {
  id?: number;
  name?: string;
  businessNumber?: string;
  representativeName?: string;
  industry?: string;
  foundedDate?: string;
  numEmployees?: number;
  revenue?: number;
  website?: string;
  logoUrl?: string;
  address?: string;
  createAt?: string;
}

export interface ResultDataListCompanySearchResponseDTO {
  count?: number;
  msg?: string;
  data?: CompanySearchResponseDTO[];
}

export interface CompanyBlockResponseDTO {
  companyId?: number;
  companyName?: string;
  representativeName?: string;
  industry?: string;
  logoUrl?: string;
  address?: string;
  createAt?: string;
}

export interface ResultDataListCompanyBlockResponseDTO {
  count?: number;
  msg?: string;
  data?: CompanyBlockResponseDTO[];
}

export interface CompanyBlockRequestDTO {
  companyIds?: number[];
}

export type CompanyFollowRequest = CompanyUnblockRequestDTO;

export interface CommunityPostDTO {
  id?: number;
  accountId?: number;
  tagId?: number;
  title?: string;
  content?: string;
  postImageKey?: string;
  postImageUrl?: string;
  profileImageUrl?: string;
  existingImageUrl?: string;
  likeCount?: number;
  commentCount?: number;
  status?: number;
  createdAt?: string;
  updatedAt?: string;
}

export interface ResultDataCommunityPostDTO {
  count?: number;
  msg?: string;
  data?: CommunityPostDTO;
}

export interface CalendarPersonalDTO {
  id?: number;
  eventType?: number;
  title?: string;
  description?: string;
  relatedId?: number;
  companyId?: number;
  companyName?: string;
  startDateTime?: string;
  endDateTime?: string;
  isAllDay?: boolean;
  updatedAt?: string;
}

export interface BookmarkRequest {
  jobPostingId?: number;
}

export interface LoginRequestDTO {
  userId?: string;
  password?: string;
}

export interface LoginResponseDTO {
  accessToken?: string;
  refreshToken?: string;
}

export interface ResultDataLoginResponseDTO {
  count?: number;
  msg?: string;
  data?: LoginResponseDTO;
}

export interface PersonalSignUpRequestDTO {
  userId?: string;
  email?: string;
  password?: string;
  phone?: string;
  name?: string;
  birthday?: string;
  status?: number;
}

export interface ResultDataPersonalSignUpRequestDTO {
  count?: number;
  msg?: string;
  data?: PersonalSignUpRequestDTO;
}

export interface ResultDataBoolean {
  count?: number;
  msg?: string;
  data?: boolean;
}

export interface PersonalEmailRequestDTO {
  email?: string;
}

export interface CertificationRequestDTO {
  name?: string;
  email?: string;
}

export interface CertificationVerifyRequestDTO {
  email?: string;
  code?: string;
}

export interface VerifyCodeRequestDTO {
  verificationToken?: string;
  code?: string;
}

export interface ResultDataVerifyCodeResponseDTO {
  count?: number;
  msg?: string;
  data?: VerifyCodeResponseDTO;
}

export interface VerifyCodeResponseDTO {
  verified?: boolean;
}

export interface FindPasswordRequestDTO {
  email?: string;
  name?: string;
  userId?: string;
}

export interface FindPasswordResponseDTO {
  sent?: boolean;
  verificationToken?: string;
  socialProvider?: string;
  email?: string;
}

export interface ResultDataFindPasswordResponseDTO {
  count?: number;
  msg?: string;
  data?: FindPasswordResponseDTO;
}

export interface NotificationTestRequest {
  accountId?: number;
  message?: string;
  notificationType?: number;
  relatedId?: number;
}

export interface NotificationReadRequest {
  notificationId?: number;
}

export type FindIdRequestDTO = CertificationRequestDTO;

export interface FindIdResponseDTO {
  userId?: string;
}

export interface ResultDataFindIdResponseDTO {
  count?: number;
  msg?: string;
  data?: FindIdResponseDTO;
}

export interface CommunityLikeDTO {
  id?: number;
  accountId?: number;
  postId?: number;
  createdAt?: string;
}

export interface ResultDataCommunityLikeDTO {
  count?: number;
  msg?: string;
  data?: CommunityLikeDTO;
}

export interface CommunityCommentDTO {
  id?: number;
  postId?: number;
  accountId?: number;
  authorName?: string;
  authorAvatar?: string;
  content?: string;
  status?: number;
  createdAt?: string;
  updatedAt?: string;
}

export interface ResultDataCommunityCommentDTO {
  count?: number;
  msg?: string;
  data?: CommunityCommentDTO;
}

export interface AdvertisementRegisterRequest {
  jobPostingId?: number;
  adType?: number;
  durationDays?: number;
  paymentKey?: string;
  orderId?: string;
  amount?: number;
}

export interface CreateCommunityTagRequest {
  name?: string;
  status?: number;
}

export interface TagSearchRequestDTO {
  status?: number;
  page?: number;
  size?: number;
  sortBy?: string;
  direction?: string;
}

export interface CommunityTagDTO {
  id?: number;
  name?: string;
  createdAt?: string;
  updatedAt?: string;
  status?: number;
}

export interface PageCommunityTagDTO {
  totalPages?: number;
  totalElements?: number;
  size?: number;
  content?: CommunityTagDTO[];
  number?: number;
  sort?: SortObject[];
  first?: boolean;
  last?: boolean;
  numberOfElements?: number;
  pageable?: PageableObject;
  empty?: boolean;
}

export interface PageableObject {
  offset?: number;
  sort?: SortObject[];
  unpaged?: boolean;
  paged?: boolean;
  pageSize?: number;
  pageNumber?: number;
}

export interface ResultDataPageCommunityTagDTO {
  count?: number;
  msg?: string;
  data?: PageCommunityTagDTO;
}

export interface SortObject {
  direction?: string;
  nullHandling?: string;
  ascending?: boolean;
  property?: string;
  ignoreCase?: boolean;
}

export type CommunityPostSearchRequestDTO = TagSearchRequestDTO;

export interface PageCommunityPostDTO {
  totalPages?: number;
  totalElements?: number;
  size?: number;
  content?: CommunityPostDTO[];
  number?: number;
  sort?: SortObject[];
  first?: boolean;
  last?: boolean;
  numberOfElements?: number;
  pageable?: PageableObject;
  empty?: boolean;
}

export interface ResultDataPageCommunityPostDTO {
  count?: number;
  msg?: string;
  data?: PageCommunityPostDTO;
}

export interface PostDeleteRequestDTO {
  postId?: number;
}

export type CommentSearchRequestDTO = TagSearchRequestDTO;

export interface PageCommunityCommentDTO {
  totalPages?: number;
  totalElements?: number;
  size?: number;
  content?: CommunityCommentDTO[];
  number?: number;
  sort?: SortObject[];
  first?: boolean;
  last?: boolean;
  numberOfElements?: number;
  pageable?: PageableObject;
  empty?: boolean;
}

export interface ResultDataPageCommunityCommentDTO {
  count?: number;
  msg?: string;
  data?: PageCommunityCommentDTO;
}

export interface CommentDeleteRequestDTO {
  commentId?: number;
}

export interface BusinessSignUpRequestDTO {
  userId?: string;
  email?: string;
  password?: string;
  phone?: string;
  name?: string;
  birthday?: string;
  position?: string;
  businessFileKey?: string;
  businessFileName?: string;
  businessNumber?: string;
  companyName?: string;
  address?: string;
  industry?: string;
  foundedDate?: string;
  numEmployees?: number;
  revenue?: number;
  website?: string;
  logoKey?: string;
  serviceConsent?: boolean;
  privacyConsent?: boolean;
  status?: number;
}

export interface ResultDataBusinessSignUpRequestDTO {
  count?: number;
  msg?: string;
  data?: BusinessSignUpRequestDTO;
}

export type BusinessEmailRequestDTO = PersonalEmailRequestDTO;

export interface ResultDataMapStringIntegerData {
  [key: string]: number;
}

export interface ResultDataMapStringInteger {
  count?: number;
  msg?: string;
  data?: ResultDataMapStringIntegerData;
}

export interface ResultDataListProfileDto {
  count?: number;
  msg?: string;
  data?: ProfileDto[];
}

export interface CustomUserPrincipal {
  accountId?: number;
  profileId?: number;
  role?: ("PERSONAL" | "BUSINESS" | "ADMIN" | "SUPER");
}

export interface PersonalInfoDTO {
  accountId?: number;
  profileId?: number;
  role?: ("PERSONAL" | "BUSINESS" | "ADMIN" | "SUPER");
  name?: string;
  email?: string;
  companyName?: string;
  position?: string;
  profileImageKey?: string;
}

export interface ResultDataPersonalInfoDTO {
  count?: number;
  msg?: string;
  data?: PersonalInfoDTO;
}

export interface ResultDataResumeSaveRequestDTO {
  count?: number;
  msg?: string;
  data?: ResumeSaveRequestDTO;
}

export interface ProfilePersonalDTO {
  profileId?: number;
  accountId?: number;
  name?: string;
  email?: string;
  phone?: string;
  profileImageKey?: string;
  desiredJobCategoryId?: number;
  desiredJobCategoryName?: string;
  desiredLocationId?: number;
  desiredLocationName?: string;
  experienceLevel?: number;
  educationLevel?: number;
  desiredSalaryCode?: number;
  skills?: string;
  profileImageUrl?: string;
}

export interface ResultDataListResumePersonalDTO {
  count?: number;
  msg?: string;
  data?: ResumePersonalDTO[];
}

export interface ResumeContentPersonalDTO {
  id?: number;
  resumeId?: number;
  sectionType?: number;
  sectionTitle?: string;
  contentOrder?: number;
  organization?: string;
  title?: string;
  field?: string;
  description?: string;
  dateFrom?: string;
  dateTo?: string;
  createdAt?: string;
}

export interface ResumePersonalDTO {
  id?: number;
  title?: string;
  createdAt?: string;
  updatedAt?: string;
  status?: number;
  overview?: string;
  resumeType?: number;
  coverLetterId?: number;
  coverLetterTitle?: string;
  resumeFile?: string;
  resumeUrl?: string;
  extraLink1?: string;
  extraLink2?: string;
  profileId?: number;
  profileInfo?: ProfilePersonalDTO;
  isPrimary?: boolean;
  contents?: ResumeContentPersonalDTO[];
}

export interface ResultDataResumeBaseInfoDTO {
  count?: number;
  msg?: string;
  data?: ResumeBaseInfoDTO;
}

export interface ResumeBaseInfoDTO {
  name?: string;
  email?: string;
  phone?: string;
  profileImageKey?: string;
  locationId?: number;
  desiredJobCategoryId?: number;
  skills?: string;
}

export interface ResultDataProfilePersonalDTO {
  count?: number;
  msg?: string;
  data?: ProfilePersonalDTO;
}

export interface ResultDataProfileInfoDTO {
  count?: number;
  msg?: string;
  data?: ProfileInfoDTO;
}

export interface AccountDTO {
  id?: number;
  userId?: string;
  email?: string;
  name?: string;
  phone?: string;
  accountType?: number;
  status?: number;
}

export interface ApplicationSummaryDTO {
  waiting?: number;
  passedDocument?: number;
  interview1st?: number;
  finalAccepted?: number;
  rejected?: number;
}

export interface MyPageDTO {
  account?: AccountDTO;
  profile?: ProfileDTO;
  resumeViewCount?: number;
  offerCount?: number;
  bookmarkCount?: number;
  applicationCount?: number;
  recentApplications?: RecentApplicationDTO[];
  summary?: ApplicationSummaryDTO;
  recommendedJobs?: RecommendedJobPostingDTO[];
  profileCompleteness?: number;
}

export interface ProfileDTO {
  id?: number;
  experienceLevel?: number;
  educationLevel?: number;
  skills?: string;
  desiredSalaryCode?: number;
  profileImageUrl?: string;
}

export interface RecentApplicationDTO {
  companyName?: string;
  jobTitle?: string;
  status?: number;
}

export interface RecommendedJobPostingDTO {
  companyName?: string;
  jobTitle?: string;
  location?: string;
  salaryRange?: string;
  deadline?: string;
  preferredSkills?: string;
}

export interface ResultDataMyPageDTO {
  count?: number;
  msg?: string;
  data?: MyPageDTO;
}

export interface ApplicationPersonalDTO {
  applicationId?: number;
  resumeId?: number;
  resumeTitle?: string;
  status?: number;
  appliedAt?: string;
  jobPostingId?: number;
  jobTitle?: string;
  expirationDate?: string;
  companyName?: string;
  canWriteReview?: boolean;
  companyId?: number;
  jobCategoryId?: number;
}

export interface ResultDataListApplicationPersonalDTO {
  count?: number;
  msg?: string;
  data?: ApplicationPersonalDTO[];
}

export interface ApplicantStats {
  totalApplicantCount?: number;
  experienceStats?: ExperienceStats;
  educationStats?: EducationStats;
  salaryStats?: SalaryStats;
}

export interface CompanyInfo {
  companyId?: number;
  companyName?: string;
  representativeName?: string;
  industry?: string;
  address?: string;
  website?: string;
  logoUrl?: string;
  foundedDate?: string;
  numEmployees?: number;
  revenue?: number;
}

export interface EducationStats {
  highSchoolCount?: number;
  collegeCount?: number;
  universityCount?: number;
  masterCount?: number;
  doctorCount?: number;
  etcCount?: number;
}

export interface ExperienceStats {
  newApplicantCount?: number;
  experiencedApplicantCount?: number;
}

export interface JobPostingDetailDTO {
  id?: number;
  jobId?: string;
  jobPosting?: JobPostingInfo;
  company?: CompanyInfo;
  bookmarkCount?: number;
  companyFollowCount?: number;
  openJobPostingCount?: number;
  interviewReviewCount?: number;
  applicantStats?: ApplicantStats;
  bookmarked?: boolean;
  companyFollowed?: boolean;
  applied?: boolean;
}

export interface JobPostingInfo {
  title?: string;
  industry?: string;
  jobType?: string;
  jobUrl?: string;
  locationCode?: string;
  experienceLevel?: number;
  experienceLevelName?: string;
  educationLevel?: number;
  educationLevelName?: string;
  salaryRange?: string;
  postingDate?: string;
  expirationDate?: string;
  viewCount?: number;
  applyCount?: number;
  keyword?: string;
  description?: string;
}

export interface ResultDataJobPostingDetailDTO {
  count?: number;
  msg?: string;
  data?: JobPostingDetailDTO;
}

export interface SalaryStats {
  below4000Count?: number;
  range4000to6000Count?: number;
  range6000to8000Count?: number;
  above8000Count?: number;
  negotiableCount?: number;
}

export interface JobPostingDTO {
  id?: number;
  jobId?: string;
  companyId?: number;
  businessAccountId?: number;
  title?: string;
  name?: string;
  jobUrl?: string;
  industry?: string;
  jobType?: string;
  locationCode?: string;
  experienceLevel?: number;
  educationLevel?: number;
  salaryCode?: number;
  salaryRange?: string;
  postingDate?: string;
  openingDate?: string;
  expirationDate?: string;
  closeType?: number;
  viewCount?: number;
  applyCount?: number;
  keyword?: string;
  templateType?: string;
  description?: string;
  createdAt?: string;
  updatedAt?: string;
  status?: number;
  location?: LocationDTO;
}

export interface LocationDTO {
  id?: number;
  locationCode?: string;
  province?: string;
  city?: string;
  fullLocation?: string;
}

export interface CompanyDTO {
  id?: number;
  name?: string;
  address?: string;
}

export interface JobRecommendationDTO {
  jobPostingId?: number;
  title?: string;
  description?: string;
  score?: number;
  industry?: string;
  salaryRange?: string;
  expirationDate?: string;
  company?: CompanyDTO;
}

export interface RecommendationResponseDTO {
  total?: number;
  recommendations?: JobRecommendationDTO[];
}

export interface ResultDataRecommendationResponseDTO {
  count?: number;
  msg?: string;
  data?: RecommendationResponseDTO;
}

export interface Pageable {
  page?: number;
  size?: number;
  sort?: string[];
}

export interface ResultDataListJobPostingDTO {
  count?: number;
  msg?: string;
  data?: JobPostingDTO[];
}

export interface InterviewListDTO {
  interviewId?: number;
  companyName?: string;
  position?: string;
  interviewDate?: string;
  hasReview?: boolean;
  companyId?: number;
  jobCategoryId?: number;
  applicationId?: number;
}

export interface ResultDataListInterviewListDTO {
  count?: number;
  msg?: string;
  data?: InterviewListDTO[];
}

export interface InterviewReviewDTO {
  id?: number;
  company?: string;
  position?: string;
  date?: string;
  jobCategory?: string;
  rating?: number;
  difficulty?: number;
  interviewType?: number;
  interviewParticipants?: number;
  questionsAsked?: string;
  interviewTip?: string;
  result?: number;
  createdAt?: string;
  updatedAt?: string;
  logo?: string;
  companyId?: number;
  jobCategoryId?: number;
  applicationId?: number;
}

export interface ResultDataListInterviewReviewDTO {
  count?: number;
  msg?: string;
  data?: InterviewReviewDTO[];
}

export interface InterviewReviewPersonalDTO {
  id?: number;
  companyName?: string;
  jobCategoryName?: string;
  interviewYearMonth?: string;
  rating?: number;
  createdAt?: string;
  jobCode?: string;
  jobName?: string;
  parentJobCode?: string;
  parentJobName?: string;
  careerLevel?: number;
  difficulty?: number;
  interviewType?: number;
  interviewParticipants?: number;
  hasFrequentQuestions?: boolean;
  questionsAsked?: string;
  interviewTip?: string;
  result?: number;
  applicationId?: number;
  companyId?: number;
  jobCategoryId?: number;
  status?: number;
}

export interface ResultDataInterviewReviewPersonalDTO {
  count?: number;
  msg?: string;
  data?: InterviewReviewPersonalDTO;
}

export interface ResultDataListInterviewReviewPersonalDTO {
  count?: number;
  msg?: string;
  data?: InterviewReviewPersonalDTO[];
}

export interface InterviewCompanySummaryDTO {
  companyId?: number;
  companyName?: string;
  reviewCount?: number;
  industry?: string;
  logoUrl?: string;
  address?: string;
  businessNumber?: string;
  website?: string;
}

export interface ResultDataInterviewCompanySummaryDTO {
  count?: number;
  msg?: string;
  data?: InterviewCompanySummaryDTO;
}

export interface ResultDataListInterviewCompanySummaryDTO {
  count?: number;
  msg?: string;
  data?: InterviewCompanySummaryDTO[];
}

export interface CoverLetterPersonalViewDTO {
  id?: number;
  title?: string;
  updatedAt?: string;
  sections?: SectionDTO[];
}

export interface ResultDataCoverLetterPersonalViewDTO {
  count?: number;
  msg?: string;
  data?: CoverLetterPersonalViewDTO;
}

export type SectionDTO = CoverLetterContentDTO;

export interface ResultDataListCoverLetterPersonalDTO {
  count?: number;
  msg?: string;
  data?: CoverLetterPersonalDTO[];
}

export interface CompanyInfoDTO {
  id?: number;
  createdAt?: string;
  updatedAt?: string;
  name?: string;
  businessNumber?: string;
  representativeName?: string;
  industry?: string;
  foundedDate?: string;
  numEmployees?: number;
  revenue?: number;
  website?: string;
  logoKey?: string;
  address?: string;
  companyType?: string;
  corpCode?: string;
  operatingProfit?: number;
  status?: number;
  avgAnnualSalary?: number;
}

export interface ResultDataCompanyInfoDTO {
  count?: number;
  msg?: string;
  data?: CompanyInfoDTO;
}

export interface ResultDataListCommunityPostDTO {
  count?: number;
  msg?: string;
  data?: CommunityPostDTO[];
}

export interface CommunityPostSimpleDTO {
  id?: number;
  title?: string;
  likeCount?: number;
  commentCount?: number;
  createdAt?: string;
}

export interface ResultDataListCommunityPostSimpleDTO {
  count?: number;
  msg?: string;
  data?: CommunityPostSimpleDTO[];
}

export interface CommunityPostListDTO {
  postId?: number;
  title?: string;
  content?: string;
  tagId?: number;
  tagName?: string;
  accountId?: number;
  name?: string;
  postImageUrl?: string;
  likeCount?: number;
  commentCount?: number;
  createdAt?: string;
  profileImageUrl?: string;
}

export interface ResultDataListCommunityPostListDTO {
  count?: number;
  msg?: string;
  data?: CommunityPostListDTO[];
}

export interface ResultDataMapStringObjectData {
  [key: string]: ResultDataObjectData;
}

export interface ResultDataMapStringObject {
  count?: number;
  msg?: string;
  data?: ResultDataMapStringObjectData;
}

export interface ResultDataCalendarPersonalDTO {
  count?: number;
  msg?: string;
  data?: CalendarPersonalDTO;
}

export interface ResultDataListCalendarPersonalDTO {
  count?: number;
  msg?: string;
  data?: CalendarPersonalDTO[];
}

export interface NotificationDTO {
  id?: number;
  notificationType?: number;
  message?: string;
  relatedId?: number;
  isRead?: number;
  createdAt?: string;
}

export interface ResultDataListNotificationDTO {
  count?: number;
  msg?: string;
  data?: NotificationDTO[];
}

export interface MainPageResponseDTO {
  recommendations?: JobPostingDTO[];
  popular?: JobPostingDTO[];
  latest?: JobPostingDTO[];
  mostApplied?: JobPostingDTO[];
  loggedIn?: boolean;
}

export interface ResultDataMainPageResponseDTO {
  count?: number;
  msg?: string;
  data?: MainPageResponseDTO;
}

export interface LocationOptionDTO {
  id?: number;
  label?: string;
  province?: string;
  city?: string;
}

export interface ResultDataListLocationOptionDTO {
  count?: number;
  msg?: string;
  data?: LocationOptionDTO[];
}

export interface JobCategoryOptionDTO {
  id?: number;
  value?: string;
  label?: string;
}

export interface ResultDataListJobCategoryOptionDTO {
  count?: number;
  msg?: string;
  data?: JobCategoryOptionDTO[];
}

export interface ResultDataListCommunityTagDTO {
  count?: number;
  msg?: string;
  data?: CommunityTagDTO[];
}

export interface ResultDataCommunityPostSimpleDTO {
  count?: number;
  msg?: string;
  data?: CommunityPostSimpleDTO;
}

export interface CommunityNewsDTO {
  title?: string;
  description?: string;
  url?: string;
  publishedAt?: string;
  sourceName?: string;
}

export interface ResultDataListCommunityNewsDTO {
  count?: number;
  msg?: string;
  data?: CommunityNewsDTO[];
}

export interface ResultDataListCommunityCommentDTO {
  count?: number;
  msg?: string;
  data?: CommunityCommentDTO[];
}

export interface ChatRoomSummaryDTO {
  roomId?: number;
  name?: string;
  avatar?: string;
  lastMessage?: string;
  lastMessageTime?: string;
  unreadCount?: number;
  opponentId?: number;
  online?: boolean;
}

export interface ResultDataListChatRoomSummaryDTO {
  count?: number;
  msg?: string;
  data?: ChatRoomSummaryDTO[];
}

export interface ChatMessageDTO {
  id?: number;
  chatRoomId?: number;
  senderId?: number;
  senderName?: string;
  senderType?: number;
  message?: string;
  isRead?: number;
  createdAt?: string;
}

export interface ResultDataListChatMessageDTO {
  count?: number;
  msg?: string;
  data?: ChatMessageDTO[];
}

export interface ResultDataListTalentDto {
  count?: number;
  msg?: string;
  data?: TalentDto[];
}

export interface TalentDto {
  id?: number;
  name?: string;
  title?: string;
  location?: string;
  experience?: string;
  education?: string;
  skills?: string[];
  profileImageKey?: string;
  moreSkills?: number;
  description?: string;
}

export interface PaymentBusinessDTO {
  id?: number;
  transactionId?: string;
  amount?: number;
  provider?: number;
  method?: number;
  status?: number;
  createdAt?: string;
  updatedAt?: string;
  adType?: number;
  advertisementId?: number;
  advertisementTitle?: string;
  advertisementPeriod?: number;
  advertisementStatus?: number;
  advertisementStartDate?: string;
  advertisementEndDate?: string;
  jobPostingId?: number;
  companyName?: string;
}

export interface ResultDataPaymentBusinessDTO {
  count?: number;
  msg?: string;
  data?: PaymentBusinessDTO;
}

export interface ResultDataListPaymentBusinessDTO {
  count?: number;
  msg?: string;
  data?: PaymentBusinessDTO[];
}

export interface AdvertisementDTO {
  id?: number;
  adType?: number;
  adTypeLabel?: string;
  startDate?: string;
  endDate?: string;
  isActive?: boolean;
}

export interface JobPostingBusinessDTO {
  id?: number;
  companyId?: number;
  companyName?: string;
  businessAccountId?: number;
  title?: string;
  jobUrl?: string;
  industry?: string;
  jobType?: string;
  locationCode?: string;
  locationName?: string;
  experienceLevel?: number;
  educationLevel?: number;
  salaryCode?: number;
  salaryRange?: string;
  postingDate?: string;
  openingDate?: string;
  expirationDate?: string;
  closeType?: number;
  keyword?: string;
  templateType?: number;
  description?: string;
  jobCategoryIds?: number[];
  status?: number;
  statusLabel?: string;
  viewCount?: number;
  applyCount?: number;
  companyLogoKey?: string;
  isAdvertised?: boolean;
  adType?: number;
  adTypeLabel?: string;
  adStartDate?: string;
  adEndDate?: string;
  advertisements?: AdvertisementDTO[];
}

export interface ResultDataJobPostingBusinessDTO {
  count?: number;
  msg?: string;
  data?: JobPostingBusinessDTO;
}

export interface ResultDataListJobPostingBusinessDTO {
  count?: number;
  msg?: string;
  data?: JobPostingBusinessDTO[];
}

export interface BusinessDashboardDTO {
  companyId?: number;
  companyName?: string;
  industry?: string;
  address?: string;
  foundedDate?: string;
  website?: string;
  logoKey?: string;
  numEmployees?: number;
  revenue?: number;
  representativeName?: string;
  businessNumber?: string;
  status?: number;
  updatedAt?: string;
  employeeScale?: string;
  totalJobPostings?: number;
  activeJobPostings?: number;
  closedJobPostings?: number;
  nearingDeadlineJobPostings?: number;
  totalViews?: number;
  totalApplications?: number;
  jobCategoryViewCount?: ResultDataMapStringIntegerData;
  jobCategoryApplicationCount?: ResultDataMapStringIntegerData;
  jobPostings?: JobPostingSimpleDTO[];
}

export interface JobPostingSimpleDTO {
  jobPostingId?: number;
  title?: string;
  location?: string;
  postedDate?: string;
  deadline?: string;
  viewCount?: number;
  applicationCount?: number;
  industry?: string;
  jobType?: string;
  salaryRange?: string;
  keyword?: string;
}

export interface ResultDataBusinessDashboardDTO {
  count?: number;
  msg?: string;
  data?: BusinessDashboardDTO;
}

export interface ResultDataCompanyProfileDTO {
  count?: number;
  msg?: string;
  data?: CompanyProfileDTO;
}

export interface JobPostingResponseDTO {
  id?: number;
  title?: string;
}

export interface ResultDataListJobPostingResponseDTO {
  count?: number;
  msg?: string;
  data?: JobPostingResponseDTO[];
}

export interface ApplicantResponseDTO {
  applicationId?: number;
  applicantName?: string;
  email?: string;
  phone?: string;
  position?: string;
  appliedDate?: string;
  status?: number;
}

export interface ResultDataListApplicantResponseDTO {
  count?: number;
  msg?: string;
  data?: ApplicantResponseDTO[];
}

export interface ApplicantStatsDTO {
  totalApplicants?: number;
  documentReviewing?: number;
  documentPassed?: number;
  documentFailed?: number;
  interviewCompleted?: number;
}

export interface ResultDataApplicantStatsDTO {
  count?: number;
  msg?: string;
  data?: ApplicantStatsDTO;
}

export interface CertificateDTO {
  name?: string;
  date?: string;
}

export interface EducationDTO {
  school?: string;
  degree?: string;
  field?: string;
  gpa?: string;
  period?: string;
}

export interface ExperienceDTO {
  company?: string;
  position?: string;
  description?: string;
  period?: string;
}

export interface LanguageDTO {
  name?: string;
  level?: string;
}

export interface ProjectDTO {
  name?: string;
  role?: string;
  description?: string;
  period?: string;
}

export interface ResultDataResumeDetailResponseDTO {
  count?: number;
  msg?: string;
  data?: ResumeDetailResponseDTO;
}

export interface ResumeDetailResponseDTO {
  resumeId?: number;
  title?: string;
  overview?: string;
  resumeFileKey?: string;
  resumeFileName?: string;
  resumeFileType?: string;
  resumeUrl?: string;
  extraLink1?: string;
  extraLink2?: string;
  isPrimary?: boolean;
  resumeType?: number;
  status?: number;
  educations?: EducationDTO[];
  experiences?: ExperienceDTO[];
  projects?: ProjectDTO[];
  skills?: string[];
  languages?: LanguageDTO[];
  certificates?: CertificateDTO[];
}

export interface ResultDataResumeApplicationDetailDTO {
  count?: number;
  msg?: string;
  data?: ResumeApplicationDetailDTO;
}

export interface ResumeApplicationDetailDTO {
  applicationId?: number;
  applicantName?: string;
  email?: string;
  phoneNumber?: string;
  position?: string;
  appliedDate?: string;
  applicationStatus?: number;
  profileImageUrl?: string;
  resumeId?: number;
  resumeTitle?: string;
  overview?: string;
  resumeTypeLabel?: string;
  resumeFileName?: string;
  resumeFileKey?: string;
  resumeFileType?: string;
  resumeFileUrl?: string;
  resumeUrl?: string;
  extraLink1?: string;
  extraLink2?: string;
  resumeContents?: ResumeContentDTO[];
  coverLetterTitle?: string;
  coverLetterContents?: CoverLetterContentDTO[];
}

export interface ResumeContentDTO {
  sectionTitle?: string;
  organization?: string;
  title?: string;
  field?: string;
  description?: string;
  dateFrom?: string;
  dateTo?: string;
}

export interface ApplicationDetailDTO {
  applicationId?: number;
  applicationName?: string;
  applicationEmail?: string;
  applicationLocation?: string;
}

export interface PagePaymentBusinessDTO {
  totalPages?: number;
  totalElements?: number;
  size?: number;
  content?: PaymentBusinessDTO[];
  number?: number;
  sort?: SortObject[];
  first?: boolean;
  last?: boolean;
  numberOfElements?: number;
  pageable?: PageableObject;
  empty?: boolean;
}

export interface ResultDataPagePaymentBusinessDTO {
  count?: number;
  msg?: string;
  data?: PagePaymentBusinessDTO;
}

export interface ResultDataListSystemLogAdminDTO {
  count?: number;
  msg?: string;
  data?: SystemLogAdminDTO[];
}

export interface SystemLogAdminDTO {
  id?: number;
  userId?: string;
  type?: string;
  module?: number;
  action?: string;
  ipAddress?: string;
  createdAt?: string;
}

export interface Account {
  id?: number;
  createdAt?: string;
  userId?: string;
  email?: string;
  password?: string;
  name?: string;
  phone?: string;
  birthday?: string;
  accountType?: number;
  position?: string;
  oauthProvider?: number;
  oauthId?: string;
  businessFileKey?: string;
  businessFileName?: string;
  updatedAt?: string;
  status?: number;
  profile?: Profile;
}

export interface Company {
  id?: number;
  createdAt?: string;
  name?: string;
  businessNumber?: string;
  representativeName?: string;
  industry?: string;
  foundedDate?: string;
  numEmployees?: number;
  revenue?: number;
  website?: string;
  logoKey?: string;
  address?: string;
  companyType?: string;
  corpCode?: string;
  operatingProfit?: number;
  updatedAt?: string;
  status?: number;
  avgAnnualSalary?: number;
  accountList?: Account[];
  jobPostingList?: JobPosting[];
}

export interface CoverLetter {
  id?: number;
  createdAt?: string;
  profile?: Profile;
  title?: string;
  status?: number;
  updatedAt?: string;
  resume?: Resume;
  coverLetterContentList?: CoverLetterContent[];
}

export interface CoverLetterContent {
  id?: number;
  createdAt?: string;
  sectionTitle?: string;
  content?: string;
  contentOrder?: number;
}

export interface JobCategory {
  id?: number;
  createdAt?: string;
  jobCode?: string;
  jobName?: string;
  parentCategory?: JobCategory;
  childCategoryList?: JobCategory[];
  jobPostingJobCategoryList?: JobPostingJobCategory[];
}

export interface JobPosting {
  id?: number;
  createdAt?: string;
  jobId?: string;
  company?: Company;
  businessAccount?: Account;
  title?: string;
  jobUrl?: string;
  industry?: string;
  jobType?: string;
  location?: Location;
  experienceLevel?: number;
  educationLevel?: number;
  salaryCode?: number;
  salaryRange?: string;
  postingDate?: string;
  openingDate?: string;
  expirationDate?: string;
  closeType?: number;
  viewCount?: number;
  applyCount?: number;
  keyword?: string;
  templateType?: number;
  description?: string;
  updatedAt?: string;
  status?: number;
  jobPostingJobCategoryList?: JobPostingJobCategory[];
}

export interface JobPostingJobCategory {
  id?: number;
  createdAt?: string;
  jobCategory?: JobCategory;
}

export interface Location {
  id?: number;
  createdAt?: string;
  locationCode?: string;
  province?: string;
  city?: string;
  fullLocation?: string;
  updatedAt?: string;
  profileList?: Profile[];
  jobPostingList?: JobPosting[];
}

export interface Profile {
  id?: number;
  createdAt?: string;
  location?: Location;
  experienceLevel?: number;
  educationLevel?: number;
  skills?: string;
  desiredJobCategory?: JobCategory;
  desiredLocation?: Location;
  desiredSalaryCode?: number;
  profileImageKey?: string;
  updatedAt?: string;
  resumeList?: Resume[];
}

export interface Resume {
  id?: number;
  createdAt?: string;
  title?: string;
  resumeType?: number;
  resumeFileKey?: string;
  resumeFileName?: string;
  resumeFileType?: string;
  resumeUrl?: string;
  overview?: string;
  coverLetter?: CoverLetter;
  extraLink1?: string;
  extraLink2?: string;
  isPrimary?: boolean;
  status?: number;
  updatedAt?: string;
  resumeContentList?: ResumeContent[];
}

export interface ResumeContent {
  id?: number;
  createdAt?: string;
  sectionType?: number;
  sectionTitle?: string;
  contentOrder?: number;
  organization?: string;
  title?: string;
  field?: string;
  description?: string;
  dateFrom?: string;
  dateTo?: string;
  contentFileKey?: string;
  contentFileName?: string;
  contentFileType?: string;
}

export interface DashboardMetricDTO {
  current?: number;
  previous?: number;
  growthRate?: number;
}

export interface MonthlyUserCountDTO {
  month?: string;
  userCount?: number;
}

export interface ResultDataUserStats {
  count?: number;
  msg?: string;
  data?: UserStats;
}

export interface UserStats {
  userCount?: DashboardMetricDTO;
  companyCount?: DashboardMetricDTO;
  jobPostingCount?: DashboardMetricDTO;
  communityPostCount?: DashboardMetricDTO;
  userGrowthChart?: MonthlyUserCountDTO[];
  userTypeChart?: UserTypeCountDTO[];
}

export interface UserTypeCountDTO {
  accountType?: number;
  count?: number;
}

export interface JobPostingStatisticsDTO {
  activeCount?: number;
  expiredCount?: number;
  draftCount?: number;
  averageViewCount?: number;
  averageApplyCount?: number;
  averagePostingDays?: number;
}

export interface JobPostingStats {
  totalJobPostings?: DashboardMetricDTO;
  activeJobPostings?: DashboardMetricDTO;
  participatingCompanies?: DashboardMetricDTO;
  totalViews?: DashboardMetricDTO;
  jobPostingGrowthChart?: MonthlyJobPostingCountDTO[];
  jobPostingStatistics?: JobPostingStatisticsDTO;
  keywordStatistics?: PopularKeywordJobPostingsDTO[];
  topCompanies?: TopCompanyJobPostingsDTO[];
  locationStatistics?: LocationJobPostingStatsDTO[];
}

export interface LocationJobPostingStatsDTO {
  locationName?: string;
  jobPostingCount?: number;
}

export interface MonthlyJobPostingCountDTO {
  month?: string;
  jobPostingCount?: number;
}

export interface PopularKeywordJobPostingsDTO {
  keyword?: string;
  count?: number;
}

export interface ResultDataJobPostingStats {
  count?: number;
  msg?: string;
  data?: JobPostingStats;
}

export interface TopCompanyJobPostingsDTO {
  companyName?: string;
  jobPostingCount?: number;
}

export interface AgeGroupDTO {
  ageGroup?: string;
  count?: number;
}

export interface ApplicationStats {
  totalApplications?: DashboardMetricDTO;
  acceptedApplications?: DashboardMetricDTO;
  rejectedApplications?: DashboardMetricDTO;
  applicationTrends?: DailyApplicationStatsDTO[];
  applicantAgeGroupChart?: AgeGroupDTO[];
  top5Companies?: TopCompanyJobPostingsDTO[];
  jobCategoryChart?: JobCategoryCountDTO[];
  jobCategoryPostings?: JobCategoryCountDTO[];
  applicationTimeStats?: ApplicationTimeStatDTO[];
}

export interface ApplicationTimeStatDTO {
  timeSlot?: string;
  applied?: number;
}

export interface DailyApplicationStatsDTO {
  date?: string;
  totalApplications?: number;
  acceptedApplications?: number;
  rejectedApplication?: number;
}

export interface JobCategoryCountDTO {
  categoryName?: string;
  jobPostingCount?: number;
}

export interface ResultDataApplicationStats {
  count?: number;
  msg?: string;
  data?: ApplicationStats;
}

export interface CompanyAdminDTO {
  id?: number;
  name?: string;
  businessNumber?: string;
  industry?: string;
  foundedDate?: string;
  numEmployees?: number;
  revenue?: number;
  website?: string;
  address?: string;
  statusName?: string;
  createdAt?: string;
  jobPostingCount?: number;
  managerCount?: number;
}

export interface PageCompanyAdminDTO {
  totalPages?: number;
  totalElements?: number;
  size?: number;
  content?: CompanyAdminDTO[];
  number?: number;
  sort?: SortObject[];
  first?: boolean;
  last?: boolean;
  numberOfElements?: number;
  pageable?: PageableObject;
  empty?: boolean;
}

export interface ResultDataPageCompanyAdminDTO {
  count?: number;
  msg?: string;
  data?: PageCompanyAdminDTO;
}

export interface ResultDataCompanyAdminDTO {
  count?: number;
  msg?: string;
  data?: CompanyAdminDTO;
}

export interface ResultDataListAdminAccountDTO {
  count?: number;
  msg?: string;
  data?: AdminAccountDTO[];
}

export interface GetProfileParams {
  id: number;
}

export type GetProfileRequestBody = undefined;

export type GetProfileResponse = ResultDataProfileDto;

// [GET] /business/profiles/{id} -> GetProfileParams, GetProfileRequestBody, GetProfileResponse

export type UpdateProfileParams = GetProfileParams;

export type UpdateProfileRequestBody = ProfileDto;

export type UpdateProfileResponse = ResultDataProfileDto;

// [PUT] /business/profiles/{id} -> UpdateProfileParams, UpdateProfileRequestBody, UpdateProfileResponse

export type DeleteProfileParams = GetProfileParams;

export type DeleteProfileRequestBody = undefined;

export type DeleteProfileResponse = ResultDataVoid;

// [DELETE] /business/profiles/{id} -> DeleteProfileParams, DeleteProfileRequestBody, DeleteProfileResponse

export interface CancelApplicationParams {
  applicationId: number;
  profileId: number;
}

export type CancelApplicationRequestBody = undefined;

export type CancelApplicationResponse = ResultDataObject;

// [PUT] /api/personal/mypage/applications/{applicationId} -> CancelApplicationParams, CancelApplicationRequestBody, CancelApplicationResponse

export interface ResetPasswordParams {
}

export type ResetPasswordRequestBody = ResetPasswordRequestDTO;

export type ResetPasswordResponse = ResultDataResetPasswordResponseDTO;

// [PUT] /api/password/reset -> ResetPasswordParams, ResetPasswordRequestBody, ResetPasswordResponse

export type UpdateCompanyProfileParams = ResetPasswordParams;

export type UpdateCompanyProfileRequestBody = CompanyProfileDTO;

export type UpdateCompanyProfileResponse = ResultDataLong;

// [PUT] /api/business/dashboard/info/update -> UpdateCompanyProfileParams, UpdateCompanyProfileRequestBody, UpdateCompanyProfileResponse

export interface UpdateStatusParams {
  applicationId: number;
}

export type UpdateStatusRequestBody = UpdateApplicationStatusRequest;

export type UpdateStatusResponse = ResultDataInteger;

// [PUT] /api/business/applicants/{applicationId}/status -> UpdateStatusParams, UpdateStatusRequestBody, UpdateStatusResponse

export type UpdateTagParams = ResetPasswordParams;

export type UpdateTagRequestBody = UpdateTagRequestDTO;

export type UpdateTagResponse = ResultDataLong;

// [PUT] /api/admin/community/tags -> UpdateTagParams, UpdateTagRequestBody, UpdateTagResponse

export type CreateTagParams = ResetPasswordParams;

export type CreateTagRequestBody = CreateCommunityTagRequest;

export type CreateTagResponse = ResultDataLong;

// [POST] /api/admin/community/tags -> CreateTagParams, CreateTagRequestBody, CreateTagResponse

export interface GetAdminsParams {
  keyword?: string;
}

export type GetAdminsRequestBody = undefined;

export type GetAdminsResponse = ResultDataListAdminAccountDTO;

// [GET] /api/admin/accounts -> GetAdminsParams, GetAdminsRequestBody, GetAdminsResponse

export type UpdateAdminParams = ResetPasswordParams;

export type UpdateAdminRequestBody = AdminAccountDTO;

export type UpdateAdminResponse = ResultDataLong;

// [PUT] /api/admin/accounts -> UpdateAdminParams, UpdateAdminRequestBody, UpdateAdminResponse

export type CreateAdminParams = ResetPasswordParams;

export type CreateAdminRequestBody = AdminAccountDTO;

export type CreateAdminResponse = ResultDataLong;

// [POST] /api/admin/accounts -> CreateAdminParams, CreateAdminRequestBody, CreateAdminResponse

export type GetAllProfilesParams = ResetPasswordParams;

export type GetAllProfilesRequestBody = undefined;

export type GetAllProfilesResponse = ResultDataListProfileDto;

// [GET] /business/profiles -> GetAllProfilesParams, GetAllProfilesRequestBody, GetAllProfilesResponse

export type CreateProfileParams = ResetPasswordParams;

export type CreateProfileRequestBody = ProfileDto;

export type CreateProfileResponse = ResultDataProfileDto;

// [POST] /business/profiles -> CreateProfileParams, CreateProfileRequestBody, CreateProfileResponse

export interface FinalSaveResumeParams {
  resumeId: number;
}

export interface FinalSaveResumeRequestBody {
  data: string;
  profileImage?: Blob | File;
  resumeFile?: Blob | File;
  contentFiles?: Blob | File[];
}

export type FinalSaveResumeResponse = ResultDataString;

// [POST] /api/personal/resume/{resumeId}/saveall -> FinalSaveResumeParams, FinalSaveResumeRequestBody, FinalSaveResumeResponse

export type UpdateResumeBasicInfoParams = FinalSaveResumeParams;

export interface UpdateResumeBasicInfoRequestBody {
  data: string;
  resumeFile?: Blob | File;
  profileImage?: Blob | File;
}

export type UpdateResumeBasicInfoResponse = ResultDataString;

// [POST] /api/personal/resume/{resumeId}/info -> UpdateResumeBasicInfoParams, UpdateResumeBasicInfoRequestBody, UpdateResumeBasicInfoResponse

export type UpdateFileResumeParams = FinalSaveResumeParams;

export interface UpdateFileResumeRequestBody {
  file: Blob | File;
}

export type UpdateFileResumeResponse = ResultDataString;

// [POST] /api/personal/resume/{resumeId}/file -> UpdateFileResumeParams, UpdateFileResumeRequestBody, UpdateFileResumeResponse

export type DuplicateResumeParams = FinalSaveResumeParams;

export type DuplicateResumeRequestBody = undefined;

export type DuplicateResumeResponse = ResultDataLong;

// [POST] /api/personal/resume/{resumeId}/duplicate -> DuplicateResumeParams, DuplicateResumeRequestBody, DuplicateResumeResponse

export type AddResumeContentParams = FinalSaveResumeParams;

export interface AddResumeContentRequestBody {
  data: string;
  file?: Blob | File;
}

export type AddResumeContentResponse = ResultDataLong;

// [POST] /api/personal/resume/{resumeId}/content -> AddResumeContentParams, AddResumeContentRequestBody, AddResumeContentResponse

export interface UpdateResumeContentParams {
  resumeId: number;
  contentId: number;
}

export type UpdateResumeContentRequestBody = AddResumeContentRequestBody;

export type UpdateResumeContentResponse = ResultDataLong;

// [POST] /api/personal/resume/{resumeId}/content/{contentId} -> UpdateResumeContentParams, UpdateResumeContentRequestBody, UpdateResumeContentResponse

export type DeleteResumeContentParams = UpdateResumeContentParams;

export type DeleteResumeContentRequestBody = undefined;

export type DeleteResumeContentResponse = ResultDataString;

// [DELETE] /api/personal/resume/{resumeId}/content/{contentId} -> DeleteResumeContentParams, DeleteResumeContentRequestBody, DeleteResumeContentResponse

export type SaveUrlResumeParams = ResetPasswordParams;

export type SaveUrlResumeRequestBody = ResumeUrlDTO;

export type SaveUrlResumeResponse = ResultDataLong;

// [POST] /api/personal/resume/url -> SaveUrlResumeParams, SaveUrlResumeRequestBody, SaveUrlResumeResponse

export type InitResumeParams = ResetPasswordParams;

export type InitResumeRequestBody = ResultDataMapStringObjectData;

export type InitResumeResponse = ResultDataLong;

// [POST] /api/personal/resume/init -> InitResumeParams, InitResumeRequestBody, InitResumeResponse

export type SaveFileResumeParams = ResetPasswordParams;

export interface SaveFileResumeRequestBody {
  data: string;
  file: Blob | File;
}

export type SaveFileResumeResponse = ResultDataLong;

// [POST] /api/personal/resume/file -> SaveFileResumeParams, SaveFileResumeRequestBody, SaveFileResumeResponse

export type CreateResumeParams = ResetPasswordParams;

export type CreateResumeRequestBody = ResumeSaveRequestDTO;

export type CreateResumeResponse = ResultDataLong;

// [POST] /api/personal/resume/create -> CreateResumeParams, CreateResumeRequestBody, CreateResumeResponse

export type ApplyForJobParams = ResetPasswordParams;

export type ApplyForJobRequestBody = ApplyRequestDTO;

export type ApplyForJobResponse = ResultDataObject;

// [POST] /api/personal/resume/apply -> ApplyForJobParams, ApplyForJobRequestBody, ApplyForJobResponse

export type GetProfileInfoParams = ResetPasswordParams;

export type GetProfileInfoRequestBody = undefined;

export type GetProfileInfoResponse = ResultDataProfileInfoDTO;

// [GET] /api/personal/profile/me -> GetProfileInfoParams, GetProfileInfoRequestBody, GetProfileInfoResponse

export type UpdateProfile1Params = ResetPasswordParams;

export type UpdateProfile1RequestBody = ProfileInfoDTO;

export type UpdateProfile1Response = ResultDataVoid;

// [POST] /api/personal/profile/me -> UpdateProfile1Params, UpdateProfile1RequestBody, UpdateProfile1Response

export type RejectOfferParams = ResetPasswordParams;

export type RejectOfferRequestBody = undefined;

export type RejectOfferResponse = ResultDataMyOfferDTO;

// [POST] /api/personal/mypage/offers/reject -> RejectOfferParams, RejectOfferRequestBody, RejectOfferResponse

export type ApproveOfferParams = ResetPasswordParams;

export type ApproveOfferRequestBody = undefined;

export type ApproveOfferResponse = ResultDataMyOfferDTO;

// [POST] /api/personal/mypage/offers/approve -> ApproveOfferParams, ApproveOfferRequestBody, ApproveOfferResponse

export type GetMyReviewsParams = ResetPasswordParams;

export type GetMyReviewsRequestBody = undefined;

export type GetMyReviewsResponse = ResultDataListInterviewReviewDTO;

// [GET] /api/personal/interview-reviews -> GetMyReviewsParams, GetMyReviewsRequestBody, GetMyReviewsResponse

export type CreateReviewParams = ResetPasswordParams;

export type CreateReviewRequestBody = InterviewReviewCreateDTO;

export type CreateReviewResponse = ResultDataLong;

// [POST] /api/personal/interview-reviews -> CreateReviewParams, CreateReviewRequestBody, CreateReviewResponse

export type DeleteCoverLetterParams = GetProfileParams;

export type DeleteCoverLetterRequestBody = undefined;

export type DeleteCoverLetterResponse = ResultDataVoid;

// [POST] /api/personal/coverletter/{id} -> DeleteCoverLetterParams, DeleteCoverLetterRequestBody, DeleteCoverLetterResponse

export interface SaveCoachingParams {
  contentId: number;
}

export type SaveCoachingRequestBody = CoachingRequestDTO;

export type SaveCoachingResponse = ResultDataCoachingResponseDTO;

// [POST] /api/personal/coverletter/{contentId}/save-coaching -> SaveCoachingParams, SaveCoachingRequestBody, SaveCoachingResponse

export interface ApplyFeedbackParams {
  contentId: number;
  feedbackId: number;
}

export type ApplyFeedbackRequestBody = undefined;

export type ApplyFeedbackResponse = ResultDataCoachingResponseDTO;

// [POST] /api/personal/coverletter/{contentId}/apply-feedback/{feedbackId} -> ApplyFeedbackParams, ApplyFeedbackRequestBody, ApplyFeedbackResponse

export type AnalyzeFitParams = ResetPasswordParams;

export type AnalyzeFitRequestBody = FitAnalysisRequestDTO;

export type AnalyzeFitResponse = ResultDataFitAnalysisResponseDTO;

// [POST] /api/personal/coverletter/fit-analysis -> AnalyzeFitParams, AnalyzeFitRequestBody, AnalyzeFitResponse

export interface UpdateCoverLetterParams {
  coverLetterId: number;
}

export type UpdateCoverLetterRequestBody = CoverLetterPersonalDTO;

export type UpdateCoverLetterResponse = ResultDataString;

// [POST] /api/personal/coverletter/edit/{coverLetterId} -> UpdateCoverLetterParams, UpdateCoverLetterRequestBody, UpdateCoverLetterResponse

export type CreateCoverLetterParams = ResetPasswordParams;

export type CreateCoverLetterRequestBody = CoverLetterPersonalDTO;

export type CreateCoverLetterResponse = ResultDataString;

// [POST] /api/personal/coverletter/create -> CreateCoverLetterParams, CreateCoverLetterRequestBody, CreateCoverLetterResponse

export type GetCoachingParams = ResetPasswordParams;

export type GetCoachingRequestBody = SimpleCoachingRequestDTO;

export type GetCoachingResponse = ResultDataSimpleCoachingResponseDTO;

// [POST] /api/personal/coverletter/coaching -> GetCoachingParams, GetCoachingRequestBody, GetCoachingResponse

export type UnblockCompanyParams = ResetPasswordParams;

export type UnblockCompanyRequestBody = CompanyUnblockRequestDTO;

export type UnblockCompanyResponse = ResultDataObject;

// [POST] /api/personal/companyblock/unblock -> UnblockCompanyParams, UnblockCompanyRequestBody, UnblockCompanyResponse

export type SearchActiveCompaniesParams = ResetPasswordParams;

export type SearchActiveCompaniesRequestBody = CompanySearchRequestDTO;

export type SearchActiveCompaniesResponse = ResultDataListCompanySearchResponseDTO;

// [POST] /api/personal/companyblock/search -> SearchActiveCompaniesParams, SearchActiveCompaniesRequestBody, SearchActiveCompaniesResponse

export type SearchBlockedCompaniesParams = ResetPasswordParams;

export type SearchBlockedCompaniesRequestBody = CompanySearchRequestDTO;

export type SearchBlockedCompaniesResponse = ResultDataListCompanyBlockResponseDTO;

// [POST] /api/personal/companyblock/listsearch -> SearchBlockedCompaniesParams, SearchBlockedCompaniesRequestBody, SearchBlockedCompaniesResponse

export type BlockCompanyParams = ResetPasswordParams;

export type BlockCompanyRequestBody = CompanyBlockRequestDTO;

export type BlockCompanyResponse = ResultDataObject;

// [POST] /api/personal/companyblock/block -> BlockCompanyParams, BlockCompanyRequestBody, BlockCompanyResponse

export type UnfollowCompanyParams = ResetPasswordParams;

export type UnfollowCompanyRequestBody = CompanyFollowRequest;

export type UnfollowCompanyResponse = ResultDataObject;

// [POST] /api/personal/company/unfollow -> UnfollowCompanyParams, UnfollowCompanyRequestBody, UnfollowCompanyResponse

export type FollowCompanyParams = ResetPasswordParams;

export type FollowCompanyRequestBody = CompanyFollowRequest;

export type FollowCompanyResponse = ResultDataObject;

// [POST] /api/personal/company/follow -> FollowCompanyParams, FollowCompanyRequestBody, FollowCompanyResponse

export type UpdatePostParams = ResetPasswordParams;

export interface UpdatePostRequestBody {
  data: CommunityPostDTO;
  image?: Blob | File;
}

export type UpdatePostResponse = ResultDataCommunityPostDTO;

// [POST] /api/personal/community/posts/edit -> UpdatePostParams, UpdatePostRequestBody, UpdatePostResponse

export interface DeletePostParams {
  postId: number;
}

export interface DeletePostRequestBody {
  [key: string]: number;
}

export type DeletePostResponse = ResultDataString;

// [POST] /api/personal/community/posts/delete/{postId} -> DeletePostParams, DeletePostRequestBody, DeletePostResponse

export type CreatePostParams = ResetPasswordParams;

export type CreatePostRequestBody = UpdatePostRequestBody;

export type CreatePostResponse = ResultDataCommunityPostDTO;

// [POST] /api/personal/community/posts/create -> CreatePostParams, CreatePostRequestBody, CreatePostResponse

export interface UpdateCalendarParams {
  calendarEventId: number;
}

export type UpdateCalendarRequestBody = CalendarPersonalDTO;

export type UpdateCalendarResponse = ResultDataString;

// [POST] /api/personal/calendar/update/{calendarEventId} -> UpdateCalendarParams, UpdateCalendarRequestBody, UpdateCalendarResponse

export type DeleteCalendarParams = UpdateCalendarParams;

export type DeleteCalendarRequestBody = undefined;

export type DeleteCalendarResponse = ResultDataString;

// [POST] /api/personal/calendar/delete/{calendarEventId} -> DeleteCalendarParams, DeleteCalendarRequestBody, DeleteCalendarResponse

export type CreateCalendarParams = ResetPasswordParams;

export type CreateCalendarRequestBody = CalendarPersonalDTO;

export type CreateCalendarResponse = ResultDataLong;

// [POST] /api/personal/calendar/create -> CreateCalendarParams, CreateCalendarRequestBody, CreateCalendarResponse

export type UnbookmarkParams = ResetPasswordParams;

export type UnbookmarkRequestBody = BookmarkRequest;

export type UnbookmarkResponse = ResultDataObject;

// [POST] /api/personal/bookmark/remove -> UnbookmarkParams, UnbookmarkRequestBody, UnbookmarkResponse

export type BookmarkParams = ResetPasswordParams;

export type BookmarkRequestBody = BookmarkRequest;

export type BookmarkResponse = ResultDataObject;

// [POST] /api/personal/bookmark/add -> BookmarkParams, BookmarkRequestBody, BookmarkResponse

export type PersonalLoginParams = ResetPasswordParams;

export type PersonalLoginRequestBody = LoginRequestDTO;

export type PersonalLoginResponse = ResultDataLoginResponseDTO;

// [POST] /api/personal/auth/login -> PersonalLoginParams, PersonalLoginRequestBody, PersonalLoginResponse

export type LoginWithGoogleParams = ResetPasswordParams;

export interface LoginWithGoogleRequestBody {
  [key: string]: string;
}

export type LoginWithGoogleResponse = ResultDataLoginResponseDTO;

// [POST] /api/personal/auth/google/callback -> LoginWithGoogleParams, LoginWithGoogleRequestBody, LoginWithGoogleResponse

export type SignupPersonalParams = ResetPasswordParams;

export type SignupPersonalRequestBody = PersonalSignUpRequestDTO;

export type SignupPersonalResponse = ResultDataPersonalSignUpRequestDTO;

// [POST] /api/personal/account/signup -> SignupPersonalParams, SignupPersonalRequestBody, SignupPersonalResponse

export interface FindByUserIdParams {
  userId: string;
}

export type FindByUserIdRequestBody = undefined;

export type FindByUserIdResponse = ResultDataBoolean;

// [POST] /api/personal/account/check/userid -> FindByUserIdParams, FindByUserIdRequestBody, FindByUserIdResponse

export type FindByEmailParams = ResetPasswordParams;

export type FindByEmailRequestBody = PersonalEmailRequestDTO;

export type FindByEmailResponse = ResultDataBoolean;

// [POST] /api/personal/account/check/email -> FindByEmailParams, FindByEmailRequestBody, FindByEmailResponse

export type SendCertificationEmailParams = ResetPasswordParams;

export type SendCertificationEmailRequestBody = CertificationRequestDTO;

export type SendCertificationEmailResponse = ResultDataObject;

// [POST] /api/personal/account/certification -> SendCertificationEmailParams, SendCertificationEmailRequestBody, SendCertificationEmailResponse

export type VerifyCertificationParams = ResetPasswordParams;

export type VerifyCertificationRequestBody = CertificationVerifyRequestDTO;

export type VerifyCertificationResponse = ResultDataObject;

// [POST] /api/personal/account/certification/verify -> VerifyCertificationParams, VerifyCertificationRequestBody, VerifyCertificationResponse

export type VerifyCodeParams = ResetPasswordParams;

export type VerifyCodeRequestBody = VerifyCodeRequestDTO;

export type VerifyCodeResponse = ResultDataVerifyCodeResponseDTO;

// [POST] /api/password/verify -> VerifyCodeParams, VerifyCodeRequestBody, VerifyCodeResponse

export type FindPasswordParams = ResetPasswordParams;

export type FindPasswordRequestBody = FindPasswordRequestDTO;

export type FindPasswordResponse = ResultDataFindPasswordResponseDTO;

// [POST] /api/password/find -> FindPasswordParams, FindPasswordRequestBody, FindPasswordResponse

export type SendTestNotificationParams = ResetPasswordParams;

export type SendTestNotificationRequestBody = NotificationTestRequest;

export type SendTestNotificationResponse = ResultDataString;

// [POST] /api/notification/send -> SendTestNotificationParams, SendTestNotificationRequestBody, SendTestNotificationResponse

export type MarkAllNotificationsAsReadParams = ResetPasswordParams;

export type MarkAllNotificationsAsReadRequestBody = undefined;

export type MarkAllNotificationsAsReadResponse = ResultDataVoid;

// [POST] /api/notification/readall -> MarkAllNotificationsAsReadParams, MarkAllNotificationsAsReadRequestBody, MarkAllNotificationsAsReadResponse

export type MarkNotificationAsReadParams = ResetPasswordParams;

export type MarkNotificationAsReadRequestBody = NotificationReadRequest;

export type MarkNotificationAsReadResponse = ResultDataLong;

// [POST] /api/notification/read -> MarkNotificationAsReadParams, MarkNotificationAsReadRequestBody, MarkNotificationAsReadResponse

export type FindUserIdParams = ResetPasswordParams;

export type FindUserIdRequestBody = FindIdRequestDTO;

export type FindUserIdResponse = ResultDataFindIdResponseDTO;

// [POST] /api/find-id -> FindUserIdParams, FindUserIdRequestBody, FindUserIdResponse

export type ToggleLikeParams = ResetPasswordParams;

export type ToggleLikeRequestBody = CommunityLikeDTO;

export type ToggleLikeResponse = ResultDataCommunityLikeDTO;

// [POST] /api/community/likes/toggle -> ToggleLikeParams, ToggleLikeRequestBody, ToggleLikeResponse

export type UpdateCommentParams = ResetPasswordParams;

export type UpdateCommentRequestBody = CommunityCommentDTO;

export type UpdateCommentResponse = ResultDataCommunityCommentDTO;

// [POST] /api/community/comments/update -> UpdateCommentParams, UpdateCommentRequestBody, UpdateCommentResponse

export interface DeleteCommentParams {
  commentId: number;
}

export type DeleteCommentRequestBody = undefined;

export type DeleteCommentResponse = ResultDataString;

// [POST] /api/community/comments/delete/{commentId} -> DeleteCommentParams, DeleteCommentRequestBody, DeleteCommentResponse

export type CreateParams = ResetPasswordParams;

export type CreateRequestBody = CommunityCommentDTO;

export type CreateResponse = ResultDataCommunityCommentDTO;

// [POST] /api/community/comments/create -> CreateParams, CreateRequestBody, CreateResponse

export type UploadFileParams = ResetPasswordParams;

export type UploadFileRequestBody = UpdateFileResumeRequestBody;

export type UploadFileResponse = ResultDataString;

// [POST] /api/chat/upload -> UploadFileParams, UploadFileRequestBody, UploadFileResponse

export interface MarkAsReadParams {
  roomId: number;
}

export type MarkAsReadRequestBody = undefined;

export type MarkAsReadResponse = ResultDataObject;

// [POST] /api/chat/rooms/{roomId}/read -> MarkAsReadParams, MarkAsReadRequestBody, MarkAsReadResponse

export type BusinessLoginParams = ResetPasswordParams;

export type BusinessLoginRequestBody = LoginRequestDTO;

export type BusinessLoginResponse = ResultDataLoginResponseDTO;

// [POST] /api/business/auth/login -> BusinessLoginParams, BusinessLoginRequestBody, BusinessLoginResponse

export type RegisterAdWithPaymentParams = ResetPasswordParams;

export type RegisterAdWithPaymentRequestBody = AdvertisementRegisterRequest;

export type RegisterAdWithPaymentResponse = ResultDataLong;

// [POST] /api/business/advertisement/register -> RegisterAdWithPaymentParams, RegisterAdWithPaymentRequestBody, RegisterAdWithPaymentResponse

export type LogoutParams = ResetPasswordParams;

export type LogoutRequestBody = undefined;

export type LogoutResponse = ResultDataString;

// [POST] /api/auth/logout -> LogoutParams, LogoutRequestBody, LogoutResponse

export type UpdateJobPostingsParams = ResetPasswordParams;

export type UpdateJobPostingsRequestBody = undefined;

export type UpdateJobPostingsResponse = string;

// [POST] /api/admin/job-postings/fetch -> UpdateJobPostingsParams, UpdateJobPostingsRequestBody, UpdateJobPostingsResponse

export interface RejectParams {
  companyId: number;
}

export type RejectRequestBody = undefined;

export type RejectResponse = ResultDataObject;

// [POST] /api/admin/companies/{companyId}/reject -> RejectParams, RejectRequestBody, RejectResponse

export type BlockParams = RejectParams;

export type BlockRequestBody = undefined;

export type BlockResponse = ResultDataObject;

// [POST] /api/admin/companies/{companyId}/block -> BlockParams, BlockRequestBody, BlockResponse

export type ApproveParams = RejectParams;

export type ApproveRequestBody = undefined;

export type ApproveResponse = ResultDataObject;

// [POST] /api/admin/companies/{companyId}/approve -> ApproveParams, ApproveRequestBody, ApproveResponse

export type SearchTagsParams = ResetPasswordParams;

export type SearchTagsRequestBody = TagSearchRequestDTO;

export type SearchTagsResponse = ResultDataPageCommunityTagDTO;

// [POST] /api/admin/community/tags/search -> SearchTagsParams, SearchTagsRequestBody, SearchTagsResponse

export type SearchPostsParams = ResetPasswordParams;

export type SearchPostsRequestBody = CommunityPostSearchRequestDTO;

export type SearchPostsResponse = ResultDataPageCommunityPostDTO;

// [POST] /api/admin/community/posts/search -> SearchPostsParams, SearchPostsRequestBody, SearchPostsResponse

export type DeletePost1Params = ResetPasswordParams;

export type DeletePost1RequestBody = PostDeleteRequestDTO;

export type DeletePost1Response = ResultDataString;

// [POST] /api/admin/community/posts/delete -> DeletePost1Params, DeletePost1RequestBody, DeletePost1Response

export type SearchCommentsParams = ResetPasswordParams;

export type SearchCommentsRequestBody = CommentSearchRequestDTO;

export type SearchCommentsResponse = ResultDataPageCommunityCommentDTO;

// [POST] /api/admin/community/comments/search -> SearchCommentsParams, SearchCommentsRequestBody, SearchCommentsResponse

export type DeleteComment1Params = ResetPasswordParams;

export type DeleteComment1RequestBody = CommentDeleteRequestDTO;

export type DeleteComment1Response = ResultDataString;

// [POST] /api/admin/community/comments/delete -> DeleteComment1Params, DeleteComment1RequestBody, DeleteComment1Response

export type AdminLoginParams = ResetPasswordParams;

export type AdminLoginRequestBody = LoginRequestDTO;

export type AdminLoginResponse = ResultDataLoginResponseDTO;

// [POST] /api/admin/auth/login -> AdminLoginParams, AdminLoginRequestBody, AdminLoginResponse

export type UploadBusinessFileParams = ResetPasswordParams;

export type UploadBusinessFileRequestBody = UpdateFileResumeRequestBody;

export type UploadBusinessFileResponse = ResultDataString;

// [POST] /api/account/business/upload -> UploadBusinessFileParams, UploadBusinessFileRequestBody, UploadBusinessFileResponse

export type SignupBusinessParams = ResetPasswordParams;

export type SignupBusinessRequestBody = BusinessSignUpRequestDTO;

export type SignupBusinessResponse = ResultDataBusinessSignUpRequestDTO;

// [POST] /api/account/business/signup -> SignupBusinessParams, SignupBusinessRequestBody, SignupBusinessResponse

export type PersonalpersonalfindByEmailParams = ResetPasswordParams;

export type PersonalpersonalfindByEmailRequestBody = BusinessEmailRequestDTO;

export type PersonalpersonalfindByEmailResponse = ResultDataBoolean;

// [POST] /api/account/business/check/email -> PersonalpersonalfindByEmailParams, PersonalpersonalfindByEmailRequestBody, PersonalpersonalfindByEmailResponse

export type SendCertificationEmail1Params = ResetPasswordParams;

export type SendCertificationEmail1RequestBody = CertificationRequestDTO;

export type SendCertificationEmail1Response = ResultDataObject;

// [POST] /api/account/business/certification -> SendCertificationEmail1Params, SendCertificationEmail1RequestBody, SendCertificationEmail1Response

export type VerifyCertification1Params = ResetPasswordParams;

export type VerifyCertification1RequestBody = CertificationVerifyRequestDTO;

export type VerifyCertification1Response = ResultDataObject;

// [POST] /api/account/business/certification/verify -> VerifyCertification1Params, VerifyCertification1RequestBody, VerifyCertification1Response

export interface UpdateFinancialsParams {
  year: number;
  reprtCode: string;
}

export type UpdateFinancialsRequestBody = undefined;

export type UpdateFinancialsResponse = ResultDataMapStringInteger;

// [POST] /admin/update-financials -> UpdateFinancialsParams, UpdateFinancialsRequestBody, UpdateFinancialsResponse

export type UpdateEmployeeStatsParams = UpdateFinancialsParams;

export type UpdateEmployeeStatsRequestBody = undefined;

export type UpdateEmployeeStatsResponse = ResultDataMapStringInteger;

// [POST] /admin/update-employee-stats -> UpdateEmployeeStatsParams, UpdateEmployeeStatsRequestBody, UpdateEmployeeStatsResponse

export type UpdateCorpCodesParams = ResetPasswordParams;

export type UpdateCorpCodesRequestBody = undefined;

export type UpdateCorpCodesResponse = ResultDataMapStringIntegerData;

// [POST] /admin/update-corp-codes -> UpdateCorpCodesParams, UpdateCorpCodesRequestBody, UpdateCorpCodesResponse

export type UpdateStatus1Params = FinalSaveResumeParams;

export type UpdateStatus1RequestBody = ResultDataMapStringIntegerData;

export type UpdateStatus1Response = ResultDataString;

// [PATCH] /api/personal/resume/{resumeId}/status -> UpdateStatus1Params, UpdateStatus1RequestBody, UpdateStatus1Response

export type SetPrimaryResumeParams = FinalSaveResumeParams;

export type SetPrimaryResumeRequestBody = undefined;

export type SetPrimaryResumeResponse = ResultDataString;

// [PATCH] /api/personal/resume/{resumeId}/represent -> SetPrimaryResumeParams, SetPrimaryResumeRequestBody, SetPrimaryResumeResponse

export type RejectJobPostingParams = GetProfileParams;

export type RejectJobPostingRequestBody = undefined;

export type RejectJobPostingResponse = ResultDataObject;

// [PATCH] /api/admin/job-postings/{id}/reject -> RejectJobPostingParams, RejectJobPostingRequestBody, RejectJobPostingResponse

export type BlockJobPostingParams = GetProfileParams;

export type BlockJobPostingRequestBody = undefined;

export type BlockJobPostingResponse = ResultDataObject;

// [PATCH] /api/admin/job-postings/{id}/block -> BlockJobPostingParams, BlockJobPostingRequestBody, BlockJobPostingResponse

export type ApproveJobPostingParams = GetProfileParams;

export type ApproveJobPostingRequestBody = undefined;

export type ApproveJobPostingResponse = ResultDataObject;

// [PATCH] /api/admin/job-postings/{id}/approve -> ApproveJobPostingParams, ApproveJobPostingRequestBody, ApproveJobPostingResponse

export interface ToggleStatusParams {
  tagId: number;
}

export type ToggleStatusRequestBody = undefined;

export type ToggleStatusResponse = ResultDataVoid;

// [PATCH] /api/admin/community/tags/{tagId}/status -> ToggleStatusParams, ToggleStatusRequestBody, ToggleStatusResponse

export type TogglePostStatusParams = DeletePostParams;

export type TogglePostStatusRequestBody = undefined;

export type TogglePostStatusResponse = ResultDataVoid;

// [PATCH] /api/admin/community/posts/{postId}/status -> TogglePostStatusParams, TogglePostStatusRequestBody, TogglePostStatusResponse

export type ToggleStatus1Params = DeleteCommentParams;

export type ToggleStatus1RequestBody = undefined;

export type ToggleStatus1Response = ResultDataVoid;

// [PATCH] /api/admin/community/comments/{commentId}/status -> ToggleStatus1Params, ToggleStatus1RequestBody, ToggleStatus1Response

export interface GetMyInfoParams {
  user: CustomUserPrincipal;
}

export type GetMyInfoRequestBody = undefined;

export type GetMyInfoResponse = ResultDataPersonalInfoDTO;

// [GET] /api/user/me -> GetMyInfoParams, GetMyInfoRequestBody, GetMyInfoResponse

export type GetViewCountParams = FinalSaveResumeParams;

export type GetViewCountRequestBody = undefined;

export type GetViewCountResponse = ResultDataInteger;

// [GET] /api/personal/resume/{resumeId}/view-count -> GetViewCountParams, GetViewCountRequestBody, GetViewCountResponse

export type GetResumeFileDownloadUrlParams = FinalSaveResumeParams;

export type GetResumeFileDownloadUrlRequestBody = undefined;

export type GetResumeFileDownloadUrlResponse = ResultDataString;

// [GET] /api/personal/resume/{resumeId}/file-url -> GetResumeFileDownloadUrlParams, GetResumeFileDownloadUrlRequestBody, GetResumeFileDownloadUrlResponse

export type GetResumeDetailParams = FinalSaveResumeParams;

export type GetResumeDetailRequestBody = undefined;

export type GetResumeDetailResponse = ResultDataResumeSaveRequestDTO;

// [GET] /api/personal/resume/view/{resumeId} -> GetResumeDetailParams, GetResumeDetailRequestBody, GetResumeDetailResponse

export type GetMyResumeListParams = ResetPasswordParams;

export type GetMyResumeListRequestBody = undefined;

export type GetMyResumeListResponse = ResultDataListResumePersonalDTO;

// [GET] /api/personal/resume/list -> GetMyResumeListParams, GetMyResumeListRequestBody, GetMyResumeListResponse

export type GetBaseInfoParams = ResetPasswordParams;

export type GetBaseInfoRequestBody = undefined;

export type GetBaseInfoResponse = ResultDataResumeBaseInfoDTO;

// [GET] /api/personal/resume/base-info -> GetBaseInfoParams, GetBaseInfoRequestBody, GetBaseInfoResponse

export type GetMyProfileParams = ResetPasswordParams;

export type GetMyProfileRequestBody = undefined;

export type GetMyProfileResponse = ResultDataProfilePersonalDTO;

// [GET] /api/personal/resume-profile/me -> GetMyProfileParams, GetMyProfileRequestBody, GetMyProfileResponse

export type GetMyPageParams = ResetPasswordParams;

export type GetMyPageRequestBody = undefined;

export type GetMyPageResponse = ResultDataMyPageDTO;

// [GET] /api/personal/mypage -> GetMyPageParams, GetMyPageRequestBody, GetMyPageResponse

export type GetMyOffersForTestParams = ResetPasswordParams;

export type GetMyOffersForTestRequestBody = undefined;

export type GetMyOffersForTestResponse = ResultDataMyOfferDTO;

// [GET] /api/personal/mypage/offers/list/review -> GetMyOffersForTestParams, GetMyOffersForTestRequestBody, GetMyOffersForTestResponse

export type GetAllOffersParams = ResetPasswordParams;

export type GetAllOffersRequestBody = undefined;

export type GetAllOffersResponse = ResultDataMyOfferDTO;

// [GET] /api/personal/mypage/offers/list/all -> GetAllOffersParams, GetAllOffersRequestBody, GetAllOffersResponse

export type GetMyApplicationsParams = ResetPasswordParams;

export type GetMyApplicationsRequestBody = undefined;

export type GetMyApplicationsResponse = ResultDataListApplicationPersonalDTO;

// [GET] /api/personal/mypage/applications -> GetMyApplicationsParams, GetMyApplicationsRequestBody, GetMyApplicationsResponse

export interface SearchApplicationsParams {
  profileId: number;
  status?: number;
}

export type SearchApplicationsRequestBody = undefined;

export type SearchApplicationsResponse = ResultDataListApplicationPersonalDTO;

// [GET] /api/personal/mypage/applications/search -> SearchApplicationsParams, SearchApplicationsRequestBody, SearchApplicationsResponse

export interface GetJobPostingDetailsParams {
  jobPostingId: number;
}

export type GetJobPostingDetailsRequestBody = undefined;

export type GetJobPostingDetailsResponse = ResultDataJobPostingDetailDTO;

// [GET] /api/personal/job/{jobPostingId} -> GetJobPostingDetailsParams, GetJobPostingDetailsRequestBody, GetJobPostingDetailsResponse

export type ViewParams = GetJobPostingDetailsParams;

export type ViewRequestBody = undefined;

export type ViewResponse = JobPostingDTO;

// [GET] /api/personal/job/view/{jobPostingId} -> ViewParams, ViewRequestBody, ViewResponse

export type RecommendJobPostingsParams = ResetPasswordParams;

export type RecommendJobPostingsRequestBody = undefined;

export type RecommendJobPostingsResponse = ResultDataRecommendationResponseDTO;

// [GET] /api/personal/job/recommend -> RecommendJobPostingsParams, RecommendJobPostingsRequestBody, RecommendJobPostingsResponse

export type AllLocationsParams = ResetPasswordParams;

export type AllLocationsRequestBody = undefined;

export type AllLocationsResponse = LocationDTO[];

// [GET] /api/personal/job/locations -> AllLocationsParams, AllLocationsRequestBody, AllLocationsResponse

export interface ListParams {
  industry?: string[];
  experienceLevel?: number;
  educationLevel?: number;
  locationCode?: string[];
  keyword?: string;
  sort?: string;
  pageable: Pageable;
}

export type ListRequestBody = undefined;

export type ListResponse = ResultDataListJobPostingDTO;

// [GET] /api/personal/job/list -> ListParams, ListRequestBody, ListResponse

export type GetInterviewListParams = ResetPasswordParams;

export type GetInterviewListRequestBody = undefined;

export type GetInterviewListResponse = ResultDataListInterviewListDTO;

// [GET] /api/personal/interviews -> GetInterviewListParams, GetInterviewListRequestBody, GetInterviewListResponse

export interface GetReviewDetailParams {
  reviewId: number;
}

export type GetReviewDetailRequestBody = undefined;

export type GetReviewDetailResponse = ResultDataInterviewReviewPersonalDTO;

// [GET] /api/personal/interview-reviews/{reviewId} -> GetReviewDetailParams, GetReviewDetailRequestBody, GetReviewDetailResponse

export type GetHotRecentReviewsParams = ResetPasswordParams;

export type GetHotRecentReviewsRequestBody = undefined;

export type GetHotRecentReviewsResponse = ResultDataListInterviewReviewPersonalDTO;

// [GET] /api/personal/interview-reviews/reviews/recently -> GetHotRecentReviewsParams, GetHotRecentReviewsRequestBody, GetHotRecentReviewsResponse

export type GetReviewsByCompanyParams = RejectParams;

export type GetReviewsByCompanyRequestBody = undefined;

export type GetReviewsByCompanyResponse = ResultDataListInterviewReviewPersonalDTO;

// [GET] /api/personal/interview-reviews/company/{companyId} -> GetReviewsByCompanyParams, GetReviewsByCompanyRequestBody, GetReviewsByCompanyResponse

export type GetCompanySummaryParams = RejectParams;

export type GetCompanySummaryRequestBody = undefined;

export type GetCompanySummaryResponse = ResultDataInterviewCompanySummaryDTO;

// [GET] /api/personal/interview-reviews/company/info/{companyId} -> GetCompanySummaryParams, GetCompanySummaryRequestBody, GetCompanySummaryResponse

export type GetCompaniesWithReviewsParams = ResetPasswordParams;

export type GetCompaniesWithReviewsRequestBody = undefined;

export type GetCompaniesWithReviewsResponse = ResultDataListInterviewCompanySummaryDTO;

// [GET] /api/personal/interview-reviews/companies -> GetCompaniesWithReviewsParams, GetCompaniesWithReviewsRequestBody, GetCompaniesWithReviewsResponse

export interface SearchCompaniesParams {
  keyword: string;
}

export type SearchCompaniesRequestBody = undefined;

export type SearchCompaniesResponse = ResultDataListInterviewCompanySummaryDTO;

// [GET] /api/personal/interview-reviews/companies/search -> SearchCompaniesParams, SearchCompaniesRequestBody, SearchCompaniesResponse

export type ViewCoverLetterParams = GetProfileParams;

export type ViewCoverLetterRequestBody = undefined;

export type ViewCoverLetterResponse = ResultDataCoverLetterPersonalViewDTO;

// [GET] /api/personal/coverletter/view -> ViewCoverLetterParams, ViewCoverLetterRequestBody, ViewCoverLetterResponse

export type GetMyCoverLettersParams = ResetPasswordParams;

export type GetMyCoverLettersRequestBody = undefined;

export type GetMyCoverLettersResponse = ResultDataListCoverLetterPersonalDTO;

// [GET] /api/personal/coverletter/list -> GetMyCoverLettersParams, GetMyCoverLettersRequestBody, GetMyCoverLettersResponse

export type GetBlockedCompaniesParams = ResetPasswordParams;

export type GetBlockedCompaniesRequestBody = undefined;

export type GetBlockedCompaniesResponse = ResultDataListCompanyBlockResponseDTO;

// [GET] /api/personal/companyblock/list -> GetBlockedCompaniesParams, GetBlockedCompaniesRequestBody, GetBlockedCompaniesResponse

export type GetCompanyInfoParams = RejectParams;

export type GetCompanyInfoRequestBody = undefined;

export type GetCompanyInfoResponse = ResultDataCompanyInfoDTO;

// [GET] /api/personal/companies/{companyId}/info -> GetCompanyInfoParams, GetCompanyInfoRequestBody, GetCompanyInfoResponse

export type GetPostsByTagParams = ToggleStatusParams;

export type GetPostsByTagRequestBody = undefined;

export type GetPostsByTagResponse = ResultDataListCommunityPostDTO;

// [GET] /api/personal/community/posts/tag/{tagId} -> GetPostsByTagParams, GetPostsByTagRequestBody, GetPostsByTagResponse

export interface GetPopularPostsParams {
  limit?: number;
}

export type GetPopularPostsRequestBody = undefined;

export type GetPopularPostsResponse = ResultDataListCommunityPostSimpleDTO;

// [GET] /api/personal/community/posts/popular -> GetPopularPostsParams, GetPopularPostsRequestBody, GetPopularPostsResponse

export interface GetPopularPostsByTagParams {
  tagId: number;
  limit?: number;
}

export type GetPopularPostsByTagRequestBody = undefined;

export type GetPopularPostsByTagResponse = ResultDataListCommunityPostSimpleDTO;

// [GET] /api/personal/community/posts/popular/tag/{tagId} -> GetPopularPostsByTagParams, GetPopularPostsByTagRequestBody, GetPopularPostsByTagResponse

export interface GetMyPostsParams {
  accountId: number;
}

export type GetMyPostsRequestBody = undefined;

export type GetMyPostsResponse = ResultDataListCommunityPostDTO;

// [GET] /api/personal/community/posts/my/{accountId} -> GetMyPostsParams, GetMyPostsRequestBody, GetMyPostsResponse

export type GetPostListParams = GetPopularPostsParams;

export type GetPostListRequestBody = undefined;

export type GetPostListResponse = ResultDataListCommunityPostListDTO;

// [GET] /api/personal/community/posts/list -> GetPostListParams, GetPostListRequestBody, GetPostListResponse

export type GetPostDetailParams = DeletePostParams;

export type GetPostDetailRequestBody = undefined;

export type GetPostDetailResponse = ResultDataCommunityPostDTO;

// [GET] /api/personal/community/posts/detail/{postId} -> GetPostDetailParams, GetPostDetailRequestBody, GetPostDetailResponse

export type GetAllActivePostsParams = ResetPasswordParams;

export type GetAllActivePostsRequestBody = undefined;

export type GetAllActivePostsResponse = ResultDataMapStringObject;

// [GET] /api/personal/community/posts/all-posts -> GetAllActivePostsParams, GetAllActivePostsRequestBody, GetAllActivePostsResponse

export type GetCalendarListParams = ResetPasswordParams;

export type GetCalendarListRequestBody = undefined;

export type GetCalendarListResponse = ResultDataObject;

// [GET] /api/personal/calendar/list -> GetCalendarListParams, GetCalendarListRequestBody, GetCalendarListResponse

export type GetCalendarDetailParams = UpdateCalendarParams;

export type GetCalendarDetailRequestBody = undefined;

export type GetCalendarDetailResponse = ResultDataCalendarPersonalDTO;

// [GET] /api/personal/calendar/detail/{calendarEventId} -> GetCalendarDetailParams, GetCalendarDetailRequestBody, GetCalendarDetailResponse

export type GetCompanyScheduleParams = ResetPasswordParams;

export type GetCompanyScheduleRequestBody = undefined;

export type GetCompanyScheduleResponse = ResultDataListCalendarPersonalDTO;

// [GET] /api/personal/calendar/business/list -> GetCompanyScheduleParams, GetCompanyScheduleRequestBody, GetCompanyScheduleResponse

export type RefreshParams = ResetPasswordParams;

export type RefreshRequestBody = undefined;

export type RefreshResponse = ResultDataLoginResponseDTO;

// [GET] /api/personal/auth/refresh -> RefreshParams, RefreshRequestBody, RefreshResponse

export interface LoginWithNaverParams {
  code: string;
  state: string;
}

export type LoginWithNaverRequestBody = undefined;

export type LoginWithNaverResponse = ResultDataLoginResponseDTO;

// [GET] /api/personal/auth/naver/callback -> LoginWithNaverParams, LoginWithNaverRequestBody, LoginWithNaverResponse

export interface LoginWithKakaoParams {
  code: string;
}

export type LoginWithKakaoRequestBody = undefined;

export type LoginWithKakaoResponse = ResultDataLoginResponseDTO;

// [GET] /api/personal/auth/kakao/callback -> LoginWithKakaoParams, LoginWithKakaoRequestBody, LoginWithKakaoResponse

export type CheckNewNotificationParams = ResetPasswordParams;

export type CheckNewNotificationRequestBody = undefined;

export type CheckNewNotificationResponse = ResultDataListNotificationDTO;

// [GET] /api/notification/new -> CheckNewNotificationParams, CheckNewNotificationRequestBody, CheckNewNotificationResponse

export type GetNotificationListParams = ResetPasswordParams;

export type GetNotificationListRequestBody = undefined;

export type GetNotificationListResponse = ResultDataListNotificationDTO;

// [GET] /api/notification/list -> GetNotificationListParams, GetNotificationListRequestBody, GetNotificationListResponse

export interface GetDefaultMainPageParams {
  page?: number;
}

export type GetDefaultMainPageRequestBody = undefined;

export type GetDefaultMainPageResponse = ResultDataMainPageResponseDTO;

// [GET] /api/main/default -> GetDefaultMainPageParams, GetDefaultMainPageRequestBody, GetDefaultMainPageResponse

export type GetMainPageParams = GetDefaultMainPageParams;

export type GetMainPageRequestBody = undefined;

export type GetMainPageResponse = ResultDataMainPageResponseDTO;

// [GET] /api/main/custom -> GetMainPageParams, GetMainPageRequestBody, GetMainPageResponse

export type GetProvincesParams = ResetPasswordParams;

export type GetProvincesRequestBody = undefined;

export type GetProvincesResponse = ResultDataListLocationOptionDTO;

// [GET] /api/locations/provinces -> GetProvincesParams, GetProvincesRequestBody, GetProvincesResponse

export interface GetCitiesParams {
  province: string;
}

export type GetCitiesRequestBody = undefined;

export type GetCitiesResponse = ResultDataListLocationOptionDTO;

// [GET] /api/locations/cities -> GetCitiesParams, GetCitiesRequestBody, GetCitiesResponse

export type SearchJobCategoriesParams = SearchCompaniesParams;

export type SearchJobCategoriesRequestBody = undefined;

export type SearchJobCategoriesResponse = ResultDataListJobCategoryOptionDTO;

// [GET] /api/job-categories/search -> SearchJobCategoriesParams, SearchJobCategoriesRequestBody, SearchJobCategoriesResponse

export type GetTagsParams = ResetPasswordParams;

export type GetTagsRequestBody = undefined;

export type GetTagsResponse = ResultDataListCommunityTagDTO;

// [GET] /api/community/tags/active-tag -> GetTagsParams, GetTagsRequestBody, GetTagsResponse

export type GetPostDetail1Params = DeletePostParams;

export type GetPostDetail1RequestBody = undefined;

export type GetPostDetail1Response = ResultDataCommunityPostSimpleDTO;

// [GET] /api/community/popular/posts/{postId} -> GetPostDetail1Params, GetPostDetail1RequestBody, GetPostDetail1Response

export type GetPopularPostsByTag1Params = GetPopularPostsByTagParams;

export type GetPopularPostsByTag1RequestBody = undefined;

export type GetPopularPostsByTag1Response = ResultDataListCommunityPostSimpleDTO;

// [GET] /api/community/popular/posts/by-tag/{tagId} -> GetPopularPostsByTag1Params, GetPopularPostsByTag1RequestBody, GetPopularPostsByTag1Response

export type GetPopularPosts1Params = GetPopularPostsParams;

export type GetPopularPosts1RequestBody = undefined;

export type GetPopularPosts1Response = ResultDataListCommunityPostSimpleDTO;

// [GET] /api/community/popular/posts/all -> GetPopularPosts1Params, GetPopularPosts1RequestBody, GetPopularPosts1Response

export interface GetNewsByTagParams {
  tagId: number;
  from?: string;
  to?: string;
}

export type GetNewsByTagRequestBody = undefined;

export type GetNewsByTagResponse = ResultDataListCommunityNewsDTO;

// [GET] /api/community/news/{tagId} -> GetNewsByTagParams, GetNewsByTagRequestBody, GetNewsByTagResponse

export type GetListParams = DeletePostParams;

export type GetListRequestBody = undefined;

export type GetListResponse = ResultDataListCommunityCommentDTO;

// [GET] /api/community/comments/{postId} -> GetListParams, GetListRequestBody, GetListResponse

export type GetMyCommentsParams = GetMyPostsParams;

export type GetMyCommentsRequestBody = undefined;

export type GetMyCommentsResponse = ResultDataListCommunityCommentDTO;

// [GET] /api/community/comments/my/{accountId} -> GetMyCommentsParams, GetMyCommentsRequestBody, GetMyCommentsResponse

export type GetUnreadCountParams = ResetPasswordParams;

export type GetUnreadCountRequestBody = undefined;

export type GetUnreadCountResponse = ResultDataLong;

// [GET] /api/chat/unread-count -> GetUnreadCountParams, GetUnreadCountRequestBody, GetUnreadCountResponse

export type GetMyChatRoomsParams = ResetPasswordParams;

export type GetMyChatRoomsRequestBody = undefined;

export type GetMyChatRoomsResponse = ResultDataListChatRoomSummaryDTO;

// [GET] /api/chat/rooms -> GetMyChatRoomsParams, GetMyChatRoomsRequestBody, GetMyChatRoomsResponse

export type GetMessagesParams = MarkAsReadParams;

export type GetMessagesRequestBody = undefined;

export type GetMessagesResponse = ResultDataListChatMessageDTO;

// [GET] /api/chat/rooms/{roomId}/messages -> GetMessagesParams, GetMessagesRequestBody, GetMessagesResponse

export type GetOnlineStatusParams = GetMyPostsParams;

export type GetOnlineStatusRequestBody = undefined;

export type GetOnlineStatusResponse = ResultDataBoolean;

// [GET] /api/chat/online-status -> GetOnlineStatusParams, GetOnlineStatusRequestBody, GetOnlineStatusResponse

export type GetTalentsParams = ResetPasswordParams;

export type GetTalentsRequestBody = undefined;

export type GetTalentsResponse = ResultDataListTalentDto;

// [GET] /api/business/talents -> GetTalentsParams, GetTalentsRequestBody, GetTalentsResponse

export interface DownloadResumeParams {
  resumeId: number;
  agreed: boolean;
}

export type DownloadResumeRequestBody = undefined;

export type DownloadResumeResponse = void;

// [GET] /api/business/resume/{resumeId}/download -> DownloadResumeParams, DownloadResumeRequestBody, DownloadResumeResponse

export interface GetPaymentDetailByTransactionIdParams {
  transactionId: string;
}

export type GetPaymentDetailByTransactionIdRequestBody = undefined;

export type GetPaymentDetailByTransactionIdResponse = ResultDataPaymentBusinessDTO;

// [GET] /api/business/payment/{transactionId} -> GetPaymentDetailByTransactionIdParams, GetPaymentDetailByTransactionIdRequestBody, GetPaymentDetailByTransactionIdResponse

export type GetMyPaymentHistoryParams = ResetPasswordParams;

export type GetMyPaymentHistoryRequestBody = undefined;

export type GetMyPaymentHistoryResponse = ResultDataListPaymentBusinessDTO;

// [GET] /api/business/payment/history -> GetMyPaymentHistoryParams, GetMyPaymentHistoryRequestBody, GetMyPaymentHistoryResponse

export type BusinessMypageParams = GetMyPostsParams;

export type BusinessMypageRequestBody = undefined;

export type BusinessMypageResponse = ResultDataString;

// [GET] /api/business/mypage -> BusinessMypageParams, BusinessMypageRequestBody, BusinessMypageResponse

export type GetJobPostingByIdParams = GetProfileParams;

export type GetJobPostingByIdRequestBody = undefined;

export type GetJobPostingByIdResponse = ResultDataJobPostingBusinessDTO;

// [GET] /api/business/job/view/{id} -> GetJobPostingByIdParams, GetJobPostingByIdRequestBody, GetJobPostingByIdResponse

export type GetMyJobPostingsParams = ResetPasswordParams;

export type GetMyJobPostingsRequestBody = undefined;

export type GetMyJobPostingsResponse = ResultDataListJobPostingBusinessDTO;

// [GET] /api/business/job/my-list -> GetMyJobPostingsParams, GetMyJobPostingsRequestBody, GetMyJobPostingsResponse

export type CompanyDashboardParams = ResetPasswordParams;

export type CompanyDashboardRequestBody = undefined;

export type CompanyDashboardResponse = ResultDataString;

// [GET] /api/business/dashboard -> CompanyDashboardParams, CompanyDashboardRequestBody, CompanyDashboardResponse

export type GetDashboardParams = ResetPasswordParams;

export type GetDashboardRequestBody = undefined;

export type GetDashboardResponse = ResultDataBusinessDashboardDTO;

// [GET] /api/business/dashboard/info -> GetDashboardParams, GetDashboardRequestBody, GetDashboardResponse

export type GetCompanyProfileParams = ResetPasswordParams;

export type GetCompanyProfileRequestBody = undefined;

export type GetCompanyProfileResponse = ResultDataCompanyProfileDTO;

// [GET] /api/business/dashboard/info/profile -> GetCompanyProfileParams, GetCompanyProfileRequestBody, GetCompanyProfileResponse

export type GetMyCompanyJobPostingsParams = ResetPasswordParams;

export type GetMyCompanyJobPostingsRequestBody = undefined;

export type GetMyCompanyJobPostingsResponse = ResultDataListJobPostingResponseDTO;

// [GET] /api/business/applicants -> GetMyCompanyJobPostingsParams, GetMyCompanyJobPostingsRequestBody, GetMyCompanyJobPostingsResponse

export type GetApplicantsByJobPostingParams = GetJobPostingDetailsParams;

export type GetApplicantsByJobPostingRequestBody = undefined;

export type GetApplicantsByJobPostingResponse = ResultDataListApplicantResponseDTO;

// [GET] /api/business/applicants/{jobPostingId} -> GetApplicantsByJobPostingParams, GetApplicantsByJobPostingRequestBody, GetApplicantsByJobPostingResponse

export type GetApplicantStatsParams = GetJobPostingDetailsParams;

export type GetApplicantStatsRequestBody = undefined;

export type GetApplicantStatsResponse = ResultDataApplicantStatsDTO;

// [GET] /api/business/applicants/{jobPostingId}/stats -> GetApplicantStatsParams, GetApplicantStatsRequestBody, GetApplicantStatsResponse

export type GetResumeByApplicationIdParams = UpdateStatusParams;

export type GetResumeByApplicationIdRequestBody = undefined;

export type GetResumeByApplicationIdResponse = ResultDataResumeDetailResponseDTO;

// [GET] /api/business/applicants/resume/{applicationId} -> GetResumeByApplicationIdParams, GetResumeByApplicationIdRequestBody, GetResumeByApplicationIdResponse

export type DownloadResumeFileParams = FinalSaveResumeParams;

export type DownloadResumeFileRequestBody = undefined;

export type DownloadResumeFileResponse = Blob | File;

// [GET] /api/applications/resume/download/{resumeId} -> DownloadResumeFileParams, DownloadResumeFileRequestBody, DownloadResumeFileResponse

export type GetResumeDetail1Params = UpdateStatusParams;

export type GetResumeDetail1RequestBody = undefined;

export type GetResumeDetail1Response = ResultDataResumeApplicationDetailDTO;

// [GET] /api/applications/resume/detail/{applicationId} -> GetResumeDetail1Params, GetResumeDetail1RequestBody, GetResumeDetail1Response

export type GetApplicationDetailsParams = ResetPasswordParams;

export type GetApplicationDetailsRequestBody = undefined;

export type GetApplicationDetailsResponse = ApplicationDetailDTO[];

// [GET] /api/applications/details -> GetApplicationDetailsParams, GetApplicationDetailsRequestBody, GetApplicationDetailsResponse

export type GetPaymentDetailParams = GetPaymentDetailByTransactionIdParams;

export type GetPaymentDetailRequestBody = undefined;

export type GetPaymentDetailResponse = ResultDataPaymentBusinessDTO;

// [GET] /api/admin/payment/{transactionId} -> GetPaymentDetailParams, GetPaymentDetailRequestBody, GetPaymentDetailResponse

export interface GetAllPaymentsParams {
  page?: number;
  size?: number;
}

export type GetAllPaymentsRequestBody = undefined;

export type GetAllPaymentsResponse = ResultDataPagePaymentBusinessDTO;

// [GET] /api/admin/payment/history -> GetAllPaymentsParams, GetAllPaymentsRequestBody, GetAllPaymentsResponse

export type AdminDashboardParams = GetMyPostsParams;

export type AdminDashboardRequestBody = undefined;

export type AdminDashboardResponse = ResultDataString;

// [GET] /api/admin/mypage -> AdminDashboardParams, AdminDashboardRequestBody, AdminDashboardResponse

export type GetAllLogsParams = ResetPasswordParams;

export type GetAllLogsRequestBody = undefined;

export type GetAllLogsResponse = ResultDataListSystemLogAdminDTO;

// [GET] /api/admin/logs -> GetAllLogsParams, GetAllLogsRequestBody, GetAllLogsResponse

export interface GetAllJobPostingsParams {
  page?: number;
  status?: number;
}

export type GetAllJobPostingsRequestBody = undefined;

export type GetAllJobPostingsResponse = ResultDataObject;

// [GET] /api/admin/job-postings -> GetAllJobPostingsParams, GetAllJobPostingsRequestBody, GetAllJobPostingsResponse

export type GetAllJobPostings1Params = ResetPasswordParams;

export type GetAllJobPostings1RequestBody = undefined;

export type GetAllJobPostings1Response = JobPosting[];

// [GET] /api/admin/job-postings/get-all -> GetAllJobPostings1Params, GetAllJobPostings1RequestBody, GetAllJobPostings1Response

export interface TestFinanceApiParams {
  name: string;
  industry: string;
}

export type TestFinanceApiRequestBody = undefined;

export type TestFinanceApiResponse = string;

// [GET] /api/admin/job-postings/company -> TestFinanceApiParams, TestFinanceApiRequestBody, TestFinanceApiResponse

export type AdminDashboard1Params = ResetPasswordParams;

export type AdminDashboard1RequestBody = undefined;

export type AdminDashboard1Response = ResultDataString;

// [GET] /api/admin/dashboard -> AdminDashboard1Params, AdminDashboard1RequestBody, AdminDashboard1Response

export type GetUserStatsParams = ResetPasswordParams;

export type GetUserStatsRequestBody = undefined;

export type GetUserStatsResponse = ResultDataUserStats;

// [GET] /api/admin/dashboard/userstats -> GetUserStatsParams, GetUserStatsRequestBody, GetUserStatsResponse

export type GetJobPostingStatsParams = ResetPasswordParams;

export type GetJobPostingStatsRequestBody = undefined;

export type GetJobPostingStatsResponse = ResultDataJobPostingStats;

// [GET] /api/admin/dashboard/jobpostingstats -> GetJobPostingStatsParams, GetJobPostingStatsRequestBody, GetJobPostingStatsResponse

export type DownloadDashboardReportParams = ResetPasswordParams;

export type DownloadDashboardReportRequestBody = undefined;

export type DownloadDashboardReportResponse = string[];

// [GET] /api/admin/dashboard/download -> DownloadDashboardReportParams, DownloadDashboardReportRequestBody, DownloadDashboardReportResponse

export type GetApplicationStatsParams = ResetPasswordParams;

export type GetApplicationStatsRequestBody = undefined;

export type GetApplicationStatsResponse = ResultDataApplicationStats;

// [GET] /api/admin/dashboard/applicationstats -> GetApplicationStatsParams, GetApplicationStatsRequestBody, GetApplicationStatsResponse

export interface GetCompaniesParams {
  pageable: Pageable;
  status?: string;
  keyword?: string;
  sort?: string;
}

export type GetCompaniesRequestBody = undefined;

export type GetCompaniesResponse = ResultDataPageCompanyAdminDTO;

// [GET] /api/admin/companies -> GetCompaniesParams, GetCompaniesRequestBody, GetCompaniesResponse

export type GetCompanyDetailParams = RejectParams;

export type GetCompanyDetailRequestBody = undefined;

export type GetCompanyDetailResponse = ResultDataCompanyAdminDTO;

// [GET] /api/admin/companies/{companyId} -> GetCompanyDetailParams, GetCompanyDetailRequestBody, GetCompanyDetailResponse

export type GetAllTagsParams = ResetPasswordParams;

export type GetAllTagsRequestBody = undefined;

export type GetAllTagsResponse = ResultDataListCommunityTagDTO;

// [GET] /api/admin/community/tags/all -> GetAllTagsParams, GetAllTagsRequestBody, GetAllTagsResponse

export type GetPostDetail2Params = DeletePostParams;

export type GetPostDetail2RequestBody = undefined;

export type GetPostDetail2Response = ResultDataCommunityPostDTO;

// [GET] /api/admin/community/posts/{postId} -> GetPostDetail2Params, GetPostDetail2RequestBody, GetPostDetail2Response

export type GetAllPostsParams = ResetPasswordParams;

export type GetAllPostsRequestBody = undefined;

export type GetAllPostsResponse = ResultDataListCommunityPostDTO;

// [GET] /api/admin/community/posts/all -> GetAllPostsParams, GetAllPostsRequestBody, GetAllPostsResponse

export type GetCommentParams = DeleteCommentParams;

export type GetCommentRequestBody = undefined;

export type GetCommentResponse = ResultDataCommunityCommentDTO;

// [GET] /api/admin/community/comments/{commentId} -> GetCommentParams, GetCommentRequestBody, GetCommentResponse

export type GetAllCommentsParams = ResetPasswordParams;

export type GetAllCommentsRequestBody = undefined;

export type GetAllCommentsResponse = ResultDataListCommunityCommentDTO;

// [GET] /api/admin/community/comments/all -> GetAllCommentsParams, GetAllCommentsRequestBody, GetAllCommentsResponse

export type DeleteResumeParams = FinalSaveResumeParams;

export type DeleteResumeRequestBody = undefined;

export type DeleteResumeResponse = ResultDataObject;

// [DELETE] /api/personal/resume/{resumeId} -> DeleteResumeParams, DeleteResumeRequestBody, DeleteResumeResponse

export type DeleteAdminParams = GetProfileParams;

export type DeleteAdminRequestBody = undefined;

export type DeleteAdminResponse = ResultDataObject;

// [DELETE] /api/admin/accounts/{id} -> DeleteAdminParams, DeleteAdminRequestBody, DeleteAdminResponse
